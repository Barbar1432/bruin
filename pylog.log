20:10:41,217 root INFO ============================
20:10:41,217 root INFO starting the loop
20:10:41,217 root INFO running loop
20:10:41,218 root INFO got init command
20:10:41,219 root INFO running loop
20:10:41,219 root INFO got get-tables command
20:10:41,220 root INFO -- returning json
20:10:41,220 root INFO running loop
20:10:41,221 root INFO got get-tables command
20:10:41,223 root INFO -- returning json
20:10:41,223 root INFO running loop
20:10:41,224 root INFO got get-tables command
20:10:41,226 root INFO -- returning json
20:10:41,226 root INFO running loop
20:10:41,227 root INFO got get-tables command
20:10:41,227 root INFO -- returning json
20:10:41,227 root INFO running loop
20:10:41,227 root INFO got get-tables command
20:10:41,228 root INFO -- returning json
20:10:41,228 root INFO running loop
20:10:41,229 root INFO got get-tables command
20:10:41,230 root INFO -- returning json
20:10:41,230 root INFO running loop
20:10:41,231 root INFO got get-tables command
20:10:41,232 root INFO -- returning json
20:10:41,232 root INFO running loop
20:10:41,233 root INFO got get-tables command
20:10:41,235 root INFO -- returning json
20:10:41,235 root INFO running loop
20:10:41,236 root INFO got get-tables command
20:10:41,237 root INFO -- returning json
20:10:41,237 root INFO running loop
20:10:41,237 root INFO got get-tables command
20:10:41,238 root INFO -- returning json
20:10:41,238 root INFO running loop
20:10:41,238 root INFO got get-tables command
20:10:41,240 root INFO -- returning json
20:10:41,240 root INFO running loop
20:10:41,241 root INFO got get-tables command
20:10:41,241 root INFO -- returning json
20:10:41,241 root INFO running loop
20:10:41,242 root INFO got get-tables command
20:10:41,249 root INFO -- returning json
20:10:41,249 root INFO running loop
20:10:41,251 root INFO got get-tables command
20:10:41,257 root INFO -- returning json
20:10:41,257 root INFO running loop
20:10:41,257 root INFO got get-tables command
20:10:41,259 root INFO -- returning json
20:10:41,259 root INFO running loop
20:10:41,260 root INFO got get-tables command
20:10:41,262 root INFO -- returning json
20:10:41,262 root INFO running loop
20:10:41,262 root INFO got get-tables command
20:10:41,263 root INFO -- returning json
20:10:41,263 root INFO running loop
20:10:41,264 root INFO got get-tables command
20:10:41,265 root INFO -- returning json
20:10:41,265 root INFO running loop
20:10:41,266 root INFO got get-tables command
20:10:41,267 root INFO -- returning json
20:10:41,267 root INFO running loop
20:10:41,268 root INFO got get-tables command
20:10:41,269 root INFO -- returning json
20:10:41,269 root INFO running loop
20:10:41,270 root INFO got get-tables command
20:10:41,273 root INFO -- returning json
20:10:41,273 root INFO running loop
20:10:41,292 root INFO got get-tables command
20:10:41,294 root INFO -- returning json
20:10:41,295 root INFO running loop
20:10:41,295 root INFO got get-tables command
20:10:41,297 root INFO -- returning json
20:10:41,297 root INFO running loop
20:10:41,297 root INFO got get-tables command
20:10:41,298 root INFO -- returning json
20:10:41,298 root INFO running loop
20:10:41,298 root INFO got get-tables command
20:10:41,300 root INFO -- returning json
20:10:41,300 root INFO running loop
20:10:41,301 root INFO got get-tables command
20:10:41,302 root INFO -- returning json
20:10:41,302 root INFO running loop
20:10:41,303 root INFO got get-tables command
20:10:41,303 root INFO -- returning json
20:10:41,303 root INFO running loop
20:10:41,304 root INFO got get-tables command
20:10:41,305 root INFO -- returning json
20:10:41,305 root INFO running loop
20:10:41,306 root INFO got get-tables command
20:10:41,306 root INFO -- returning json
20:10:41,306 root INFO running loop
20:10:41,308 root INFO got get-tables command
20:10:41,309 root INFO -- returning json
20:10:41,309 root INFO running loop
20:10:41,310 root INFO got get-tables command
20:10:41,310 root INFO -- returning json
20:10:41,310 root INFO running loop
20:10:41,311 root INFO got get-tables command
20:10:41,312 root INFO -- returning json
20:10:41,312 root INFO running loop
20:10:41,313 root INFO got get-tables command
20:10:41,313 root INFO -- returning json
20:10:41,313 root INFO running loop
20:10:41,315 root INFO got get-tables command
20:10:41,316 root INFO -- returning json
20:10:41,316 root INFO running loop
20:10:41,316 root INFO got get-tables command
20:10:41,317 root INFO -- returning json
20:10:41,317 root INFO running loop
20:10:41,317 root INFO got get-tables command
20:10:41,318 root INFO -- returning json
20:10:41,318 root INFO running loop
20:10:41,319 root INFO got get-tables command
20:10:41,323 root INFO -- returning json
20:10:41,323 root INFO running loop
20:10:41,324 root INFO got get-tables command
20:10:41,324 root INFO -- returning json
20:10:41,324 root INFO running loop
20:10:41,325 root INFO got get-tables command
20:10:41,328 root INFO -- returning json
20:10:41,328 root INFO running loop
20:10:41,328 root INFO got get-tables command
20:10:41,330 root INFO -- returning json
20:10:41,330 root INFO running loop
20:10:41,331 root INFO got get-tables command
20:10:41,331 root INFO -- returning json
20:10:41,331 root INFO running loop
20:10:41,332 root INFO got get-tables command
20:10:41,332 root INFO -- returning json
20:10:41,332 root INFO running loop
20:10:41,338 root INFO got get-tables command
20:10:41,347 root INFO -- returning json
20:10:41,347 root INFO running loop
20:10:41,347 root INFO got get-tables command
20:10:41,348 root INFO -- returning json
20:10:41,348 root INFO running loop
20:10:41,349 root INFO got get-tables command
20:10:41,349 root INFO -- returning json
20:10:41,349 root INFO running loop
20:10:41,349 root INFO got get-tables command
20:10:41,350 root INFO -- returning json
20:10:41,350 root INFO running loop
20:10:41,350 root INFO got get-tables command
20:10:41,351 root INFO -- returning json
20:10:41,351 root INFO running loop
20:10:41,351 root INFO got get-tables command
20:10:41,351 root INFO -- returning json
20:10:41,351 root INFO running loop
20:10:41,352 root INFO got get-tables command
20:10:41,353 root INFO -- returning json
20:10:41,353 root INFO running loop
20:10:41,353 root INFO got get-tables command
20:10:41,356 root INFO -- returning json
20:10:41,357 root INFO running loop
20:10:41,357 root INFO got get-tables command
20:10:41,359 root INFO -- returning json
20:10:41,359 root INFO running loop
20:10:41,360 root INFO got get-tables command
20:10:41,362 root INFO -- returning json
20:10:41,362 root INFO running loop
20:10:41,362 root INFO got get-tables command
20:10:41,362 root INFO -- returning json
20:10:41,362 root INFO running loop
20:10:41,363 root INFO got get-tables command
20:10:41,365 root INFO -- returning json
20:10:41,365 root INFO running loop
20:10:41,365 root INFO got get-tables command
20:10:41,366 root INFO -- returning json
20:10:41,366 root INFO running loop
20:10:41,367 root INFO got get-tables command
20:10:41,367 root INFO -- returning json
20:10:41,367 root INFO running loop
20:10:41,371 root INFO got get-tables command
20:10:41,378 root INFO -- returning json
20:10:41,378 root INFO running loop
20:10:41,379 root INFO got get-tables command
20:10:41,384 root INFO -- returning json
20:10:41,384 root INFO running loop
20:10:41,384 root INFO got get-tables command
20:10:41,386 root INFO -- returning json
20:10:41,386 root INFO running loop
20:10:41,389 root INFO got get-tables command
20:10:41,392 root INFO -- returning json
20:10:41,392 root INFO running loop
20:10:41,395 root INFO got get-tables command
20:10:41,401 root INFO -- returning json
20:10:41,401 root INFO running loop
20:10:41,405 root INFO got get-tables command
20:10:41,412 root INFO -- returning json
20:10:41,412 root INFO running loop
20:10:41,413 root INFO got get-tables command
20:10:41,414 root INFO -- returning json
20:10:41,414 root INFO running loop
20:10:41,415 root INFO got get-tables command
20:10:41,419 root INFO -- returning json
20:10:41,419 root INFO running loop
20:10:41,419 root INFO got get-tables command
20:10:41,419 root INFO -- returning json
20:10:41,419 root INFO running loop
20:10:41,423 root INFO got out of the loop
20:13:31,900 root INFO ============================
20:13:31,900 root INFO starting the loop
20:13:31,900 root INFO running loop
20:13:31,901 root INFO got init command
20:13:31,902 root INFO running loop
20:13:31,902 root INFO got get-tables command
20:13:31,903 root INFO -- returning json
20:13:31,903 root INFO running loop
20:13:31,904 root INFO got out of the loop
20:14:27,240 root INFO ============================
20:14:27,240 root INFO starting the loop
20:14:27,240 root INFO running loop
20:14:27,241 root INFO got init command
20:14:27,242 root INFO running loop
20:14:27,243 root INFO got get-tables command
20:14:27,244 root INFO -- returning json
20:14:27,244 root INFO running loop
20:14:27,245 root INFO got out of the loop
20:15:53,476 root INFO ============================
20:15:53,476 root INFO starting the loop
20:15:53,476 root INFO running loop
20:15:53,477 root INFO got init command
20:15:53,478 root INFO running loop
20:15:53,479 root INFO got get-tables command
20:15:53,479 root INFO -- returning json
20:15:53,479 root INFO running loop
20:15:53,480 root INFO got out of the loop
20:18:42,367 root INFO ============================
20:18:42,367 root INFO starting the loop
20:18:42,367 root INFO running loop
20:18:42,367 root INFO -- loaded json: {"command":"init","contents":null}

20:18:42,367 root INFO got init command
20:18:42,367 root INFO -- returning json: {}
20:18:42,367 root INFO running loop
20:18:42,377 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nWITH d1_xgboost_d7 AS MODEL core.models.d1_xgboost_d7 VERSION v2\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    2 as prediction_priority,\n    'd1_xgb' as model,\n    'v2' as version,\n    (d1_xgboost_d7!predict(IAPREV_1D_NET , ADREV_1D , IAPREV_2D_ACTUAL , ADREV_2D_ACTUAL , IAPREV_1D_NET_ROLLING , IAPREV_2D_NET_ROLLING , COST_PRED , ADREV_1D_ROLLING , ADREV_2D_ROLLING , RETENTION_RATE_1D , IAPREV_1D_NET_LAGGED_7D , INSTALLS , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_SPEND_PER_COUNTRY , RELATIVE_INSTALLS_PER_COUNTRY , CPI , CPI_OHE , CPA_OHE , AD_OHE , BLD_OHE , IAP_OHE , OTHER_OHE , EATVENTURE_OHE , WAW_OHE , POCKETCHESS_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\n}}

20:18:42,377 root INFO got get-tables command
20:18:42,377 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 3, Col: 27.\n  \n\nWITH d1_xgboost_d7 AS \u001b[4mMODEL\u001b[0m core.models.d1_xgboost_d7 VERSION v2\nSELECT\n    conversion_date,\n    campaign_id,\n    current_times"}
20:18:42,377 root INFO running loop
20:18:42,378 root INFO got out of the loop
20:23:17,49 root INFO ============================
20:23:17,49 root INFO starting the loop
20:23:17,49 root INFO running loop
20:23:17,50 root INFO -- loaded json: {"command":"init","contents":null}

20:23:17,50 root INFO got init command
20:23:17,50 root INFO -- returning json: {}
20:23:17,50 root INFO running loop
20:23:17,50 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    'com.hwqgrhhjfd.idlefastfood' AS bundle_id,\n    'Eatventure' AS app\nUNION ALL\nSELECT\n    'com.dkxqzbfkjt.pocketchess' AS bundle_id,\n    'Pocketchess' AS app\nUNION ALL\nSELECT\n    'com.vjsjlqvlmp.wearewarriors' AS bundle_id,\n    'We are Warriors!' AS app"}}

20:23:17,50 root INFO got get-tables command
20:23:17,50 root INFO -- returning json: {"tables": []}
20:23:17,50 root INFO running loop
20:23:17,51 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    '[WaW-iOS] Applovin_d7-APROAS-MUL-21/02/24_0114' AS deprecated_name,\n    '[WaW-iOS] Applovin_d7-IAPROAS-MUL-21/02/24_0114' AS new_name\nUNION ALL\nSELECT\n\n    '[WaW-Android] Applovin_BLDROAS_GL-WW-08/01/24_021' AS deprecated_name,\n    '[WaW-Android] Applovin_BLDROAS_GL-WW-03/01/24_021' AS new_name"}}

20:23:17,51 root INFO got get-tables command
20:23:17,51 root INFO -- returning json: {"tables": []}
20:23:17,51 root INFO running loop
20:23:17,51 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH oldimpressions AS (\n    SELECT\n        u.app,\n        u.platform,\n        CONVERT_TIMEZONE('CET', e.adjusted_timestamp)::DATE AS date,\n        IFF(u.country = 'US', 'US', 'non-US') AS country,\n        COUNT(*) AS impressions,\n        SUM(e.converted_revenue) AS revenue\n    FROM\n        singular.clean_events AS e\n    INNER JOIN\n        user.users AS u\n        ON e.device_id = u.device_id AND e.app = u.app AND e.attribution_event_timestamp = u.install_ts\n    WHERE\n        e.name = '__ADMON_USER_LEVEL_REVENUE__'\n        AND CONVERT_TIMEZONE('CET', e.adjusted_timestamp)::DATE BETWEEN '2024-07-16' AND '2024-07-16'\n        AND e.etl_record_processing_hour_utc \u003c '2024-04-11 09:00:00.000 +0000'\n    GROUP BY\n        1, 2, 3, 4\n),\n\nadmon_batching AS (\n    SELECT\n        u.app,\n        u.platform,\n        CONVERT_TIMEZONE('CET', e.adjusted_timestamp)::DATE AS date,\n        IFF(u.country = 'US', 'US', 'non-US') AS country,\n        SUM(PARSE_JSON(e.arguments):admon_count) AS impressions,\n        SUM(e.converted_revenue) AS revenue\n    FROM\n        singular.clean_events AS e\n    INNER JOIN\n        user.users AS u\n        ON e.device_id = u.device_id AND e.app = u.app AND e.attribution_event_timestamp = u.install_ts\n    WHERE\n        e.name = '__ADMON_USER_LEVEL_REVENUE__'\n        AND CONVERT_TIMEZONE('CET', e.adjusted_timestamp)::DATE BETWEEN '2024-07-16' AND '2024-07-16'\n        AND e.etl_record_processing_hour_utc \u003e= '2024-04-11 09:00:00.000 +0000'\n    GROUP BY\n        1, 2, 3, 4\n)\n\nSELECT * FROM oldimpressions\nUNION ALL\nSELECT * FROM admon_batching;"}}

20:23:17,51 root INFO got get-tables command
20:23:17,54 root INFO -- returning json: {"tables": ["singular.clean_events", "user.users"]}
20:23:17,54 root INFO running loop
20:23:17,54 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH kpis AS (\n    SELECT\n        conversion_date AS date,\n        app,\n        platform,\n        CASE WHEN\n                country = 'US' THEN 'US'\n            ELSE 'ROW'\n        END AS geo,\n        SUM(installs) AS installs,\n        SUM(dau) AS dau,\n        SUM(cost) AS cost,\n        SUM(iaprev_actual_net) AS iap_revenue_net,\n        SUM(adrev_actual) AS ad_revenue,\n        SUM(totalrev_actual) AS total_revenue_gross\n    FROM ua.coalesced_ua_data\n    WHERE date \u003e= '2023-02-01'\n    GROUP BY 1, 2, 3, 4\n),\n\ncpm_non_country AS (\n    SELECT\n        date,\n        app,\n        platform,\n        CASE WHEN\n                country = 'US' THEN 'US'\n            ELSE 'ROW'\n        END AS geo,\n        SUM(impressions) AS impressions,\n        SUM(revenue) AS revenue\n    FROM daily.cpm\n    WHERE date \u003e= '2023-02-01'\n    GROUP BY 1, 2, 3, 4\n)\n\nSELECT\n    date,\n    app,\n    platform,\n    geo,\n    kpis.iap_revenue_net,\n    kpis.ad_revenue,\n    cpm.impressions,\n    kpis.total_revenue_gross,\n    kpis.cost,\n    kpis.installs,\n    kpis.dau,\n    (cpm.revenue * 1000 / cpm.impressions)::NUMBER(38, 6) AS cpm,\n    cpm.impressions / kpis.dau AS impressions_per_dau\nFROM kpis\nFULL JOIN cpm_non_country AS cpm USING (date, app, platform, geo)\nWHERE date BETWEEN '2023-02-01' AND '2024-07-16';"}}

20:23:17,54 root INFO got get-tables command
20:23:17,56 root INFO -- returning json: {"tables": ["daily.cpm", "ua.coalesced_ua_data"]}
20:23:17,56 root INFO running loop
20:23:17,56 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    COALESCE(\n        NULLIF(PARSE_JSON(e.arguments):ad_mediation_platform::STRING, ''),\n        'missing'\n    ) AS ad_platform,\n    DATE_TRUNC('MONTH', e.adjusted_timestamp::DATE) AS revenue_month,\n    SUM(e.converted_revenue) AS revenue_ad\nFROM ua_data.singular.clean_events AS e\nINNER JOIN\n    ua_data.user.users AS u\n    ON e.device_id = u.device_id AND e.app = u.app AND e.attribution_event_timestamp = u.install_ts\nWHERE e.name IN ('__ADMON_USER_LEVEL_REVENUE__')\n    AND e.adjusted_timestamp::DATE BETWEEN '2024-07-16' AND '2024-07-16'\nGROUP BY 1, 2"}}

20:23:17,56 root INFO got get-tables command
20:23:17,57 root INFO -- returning json: {"tables": ["ua_data.user.users", "ua_data.singular.clean_events"]}
20:23:17,57 root INFO running loop
20:23:17,57 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    simplenetworknames,\n    DATE_TRUNC('month', conversion_date) AS month,\n    SUM(cost) AS cost\nFROM ua_data.ua.coalesced_ua_data\nWHERE conversion_date BETWEEN '2024-07-16' AND '2024-07-16'\nGROUP BY 1, 2"}}

20:23:17,57 root INFO got get-tables command
20:23:17,58 root INFO -- returning json: {"tables": ["ua_data.ua.coalesced_ua_data"]}
20:23:17,58 root INFO running loop
20:23:17,58 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH iaps AS (\n    SELECT\n        CASE\n            WHEN cid.platform = 'android' THEN 'Google (IAP)'\n            WHEN cid.platform = 'ios' THEN 'Apple (IAP)'\n        END AS platform,\n        DATE_TRUNC('month', c_agg.revenue_date) AS revenue_month,\n        SUM(c_agg.revenue_iap) AS revenue_iap,\n        SUM(c_agg.fee_iap) AS fee_iap,\n        SUM(c_agg.vat_amount) AS vat_amount\n    FROM ua_data.cohorts.cohort_aggregates AS c_agg\n    INNER JOIN ua_data.cohorts.cohort_id USING (cohort_id)\n    INNER JOIN ua_data.cohorts.creative_id AS cid USING (campaign_creative_id)\n    GROUP BY 1, 2\n)\n\nSELECT\n    iaps.fee_iap,\n    iaps.vat_amount,\n    COALESCE(admon.revenue_ad, iaps.revenue_iap) AS revenue,\n    COALESCE(admon.revenue_month, iaps.revenue_month) AS month,\n    COALESCE(admon.ad_platform, iaps.platform) AS ad_platform\nFROM monthly_admon_revenue AS admon\nFULL JOIN iaps USING (revenue_month)"}}

20:23:17,58 root INFO got get-tables command
20:23:17,59 root INFO -- returning json: {"tables": ["ua_data.cohorts.cohort_id", "ua_data.cohorts.creative_id", "ua_data.cohorts.cohort_aggregates", "monthly_admon_revenue"]}
20:23:17,59 root INFO running loop
20:23:17,59 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"bigquery","query":"WITH combined_data AS (\n    SELECT\n        ev.date,\n        ev.produced_by,\n        ev.status,\n        ev.test_platform,\n        ev.test_winner,\n        ev.resized,\n        CONCAT('ID', LPAD(TRIM(SUBSTR(TRIM(ev.concept_id), 3)), 4, '0')) AS concept,\n        LPAD(TRIM(ev.var_id), 2, '0') AS var,\n        ev.idea,\n        ev.test_winner2,\n        ev.week_num,\n        ev.upload,\n        'Eatventure' AS app,\n        ROW_NUMBER() OVER (\n            PARTITION BY\n                CONCAT('ID', LPAD(TRIM(SUBSTR(TRIM(ev.concept_id), 3)), 4, '0')), LPAD(TRIM(ev.var_id), 2, '0'),\n                'Eatventure'\n            ORDER BY ev.date DESC\n        ) AS row_num\n    FROM ua.ev_creative_sheet AS ev\n    WHERE ev.concept_id IS NOT null\n\n    UNION ALL\n\n    SELECT\n        waw.date,\n        waw.produced_by,\n        waw.status,\n        waw.test_platform,\n        waw.test_winner,\n        waw.resized,\n        CONCAT('ID', LPAD(TRIM(SUBSTR(TRIM(waw.concept_id), 3)), 4, '0')) AS concept,\n        LPAD(TRIM(waw.var_id), 2, '0') AS var,\n        waw.idea,\n        waw.test_winner2,\n        waw.week_num,\n        waw.upload,\n        'We are Warriors!' AS app,\n        ROW_NUMBER()\n            OVER (\n                PARTITION BY\n                    CONCAT('ID', LPAD(TRIM(SUBSTR(TRIM(waw.concept_id), 3)), 4, '0')),\n                    LPAD(TRIM(waw.var_id), 2, '0'),\n                    'We are Warriors!'\n                ORDER BY waw.date DESC\n            )\n            AS row_num\n    FROM ua.waw_creative_sheet AS waw\n    WHERE waw.concept_id IS NOT null\n)\n\nSELECT\n    date,\n    produced_by,\n    status,\n    test_platform,\n    test_winner,\n    resized,\n    concept,\n    var,\n    idea,\n    test_winner2,\n    week_num,\n    upload,\n    app,\n    CONCAT(app, '_', concept, '_', var) AS unique_id\nFROM combined_data\nWHERE row_num = 1"}}

20:23:17,59 root INFO got get-tables command
20:23:17,63 root INFO -- returning json: {"tables": ["ua.ev_creative_sheet", "ua.waw_creative_sheet"]}
20:23:17,63 root INFO running loop
20:23:17,63 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"bigquery","query":"SELECT\n    TRIM(name_network) AS name_network,\n    TRIM(type_status) AS type_status,\n    TRIM(type_optimization) AS type_optimization,\n    budget_daily\nFROM ua.ev_campaign_log\nWHERE name_network IS NOT null\nUNION ALL\nSELECT\n    TRIM(name_network) AS name_network,\n    TRIM(type_status) AS type_status,\n    TRIM(type_optimization) AS type_optimization,\n    budget_daily\nFROM ua.waw_campaign_log\nWHERE name_network IS NOT null;"}}

20:23:17,63 root INFO got get-tables command
20:23:17,63 root INFO -- returning json: {"tables": ["ua.ev_campaign_log", "ua.waw_campaign_log"]}
20:23:17,63 root INFO running loop
20:23:17,64 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    DATE_TRUNC('month', CONVERT_TIMEZONE('CET', u.install_ts)::DATE) AS install_month,\n    CASE WHEN\n      DATE_TRUNC('month', REVENUE_DATE) \u003c install_month THEN install_month\n      ELSE DATE_TRUNC('month', REVENUE_DATE)\n    END AS month,\n    u.app,\n    u.platform,\n    CASE WHEN\n      country = 'US' THEN 'US'\n      ELSE 'ROW'\n    END AS geo,\n    COUNT(DISTINCT device_id) AS ACTIVE_USERS\nFROM user.user_aggregates a\nJOIN user.users u USING (INSTALL_ID)\nGROUP BY 1,2,3,4,5;"}}

20:23:17,64 root INFO got get-tables command
20:23:17,64 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,64 root INFO running loop
20:23:17,65 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH revenue AS (\n    SELECT\n        cid.app,\n        cid.platform,\n        DATE_TRUNC('month', agg.conversion_date) AS install_month,\n        CASE WHEN\n                DATE_TRUNC('month', agg.revenue_date) \u003c install_month THEN install_month\n            ELSE DATE_TRUNC('month', agg.revenue_date)\n        END AS month,\n        CASE WHEN\n                cohort_id.country = 'US' THEN 'US'\n            ELSE 'ROW'\n        END AS geo,\n        SUM(agg.revenue_ad) AS ad_revenue,\n        SUM(agg.revenue_iap) AS iap_revenue,\n        SUM(agg.fee_iap) AS iap_store_fee,\n        SUM(agg.vat_amount) AS iap_tax\n    FROM cohorts.cohort_aggregates AS agg\n    INNER JOIN cohorts.cohort_id AS cohort_id USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    GROUP BY 1, 2, 3, 4, 5\n)\n\nSELECT\n    app,\n    platform,\n    geo,\n    month,\n    install_month,\n    rev.ad_revenue,\n    rev.iap_revenue,\n    rev.iap_store_fee,\n    rev.iap_tax,\n    mau.active_users AS mau\nFROM revenue AS rev\nFULL JOIN monthly.cohorted_mau AS mau USING (app, platform, month, install_month, geo);"}}

20:23:17,65 root INFO got get-tables command
20:23:17,66 root INFO -- returning json: {"tables": ["cohorts.creative_id", "monthly.cohorted_mau", "cohorts.cohort_aggregates", "cohorts.cohort_id"]}
20:23:17,66 root INFO running loop
20:23:17,66 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH kpis AS (\n    SELECT\n        app,\n        platform,\n        country,\n        SUM(installs)::NUMBER(30, 6) AS installs,\n        SUM(cost)::NUMBER(30, 6) AS cost,\n        SUM(adrev_actual)::NUMBER(30, 6) AS ad_revenue,\n        SUM(iaprev_actual)::NUMBER(30, 6) AS iap_revenue,\n        SUM(iaprev_actual_net)::NUMBER(30, 6) AS iap_revenue_net,\n        SUM(profit_actual)::NUMBER(30, 6) AS profit,\n        DATE_TRUNC('month', conversion_date) AS month\n    FROM ua.coalesced_ua_data\n    GROUP BY app, platform, country, month\n)\n\nSELECT\n    app,\n    platform,\n    country,\n    month,\n    kpis.installs,\n    kpis.cost AS ua_spend,\n    kpis.ad_revenue,\n    kpis.iap_revenue,\n    kpis.iap_revenue_net,\n    kpis.profit,\n    cpi.cpi::NUMBER(30, 6) AS cpi,\n    cpi.ecpi::NUMBER(30, 6) AS ecpi\nFROM kpis\nFULL JOIN monthly.cpi AS cpi USING (app, platform, month, country)\nWHERE month \u003e= '2024-02-01';"}}

20:23:17,66 root INFO got get-tables command
20:23:17,68 root INFO -- returning json: {"tables": ["ua.coalesced_ua_data", "monthly.cpi"]}
20:23:17,68 root INFO running loop
20:23:17,68 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    app,\n    platform,\n    country,\n    DATE_TRUNC('month', conversion_date) AS month,\n    IFF(\n        SUM(IFF(simplenetworknames != 'Other', installs, 0)) \u003e 0,\n        SUM(cost) / SUM(IFF(simplenetworknames != 'Other', installs, 0)),\n        null\n    ) AS cpi,\n    IFF(SUM(installs) \u003e 0, SUM(cost) / SUM(installs), null) AS ecpi\nFROM ua.coalesced_ua_data\nWHERE month \u003e= '2023-02-01'\nGROUP BY 1, 2, 3, 4;"}}

20:23:17,68 root INFO got get-tables command
20:23:17,69 root INFO -- returning json: {"tables": ["ua.coalesced_ua_data"]}
20:23:17,69 root INFO running loop
20:23:17,69 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH adrev as (\nSELECT \n    app,\n    platform,\n    CASE WHEN\n      country = 'US' THEN 'US'\n      ELSE 'ROW'\n    END AS geo,\n    DATE_TRUNC('month', date) AS month,\n    SUM(impressions) AS impressions,\n    SUM(revenue) AS revenue\nFROM daily.cpm\nGROUP BY 1, 2, 3, 4\n)\nSELECT \n    app,\n    platform,\n    month,\n    geo,\n    impressions,\n    (revenue*1000/ impressions)::NUMBER(38,6) as cpm,\n    impressions/ACTIVE_USERS as impressions_per_mau\nFROM adrev\nFULL JOIN monthly.mau USING (app, platform, month, geo)\nWHERE impressions \u003e 0"}}

20:23:17,69 root INFO got get-tables command
20:23:17,70 root INFO -- returning json: {"tables": ["monthly.mau", "daily.cpm"]}
20:23:17,70 root INFO running loop
20:23:17,71 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH kpis AS (\n    SELECT\n        app,\n        platform,\n        DATE_TRUNC('month', conversion_date) AS month,\n        CASE WHEN\n                country = 'US' THEN 'US'\n            ELSE 'ROW'\n        END AS geo,\n        \n            SUM(RETAINED_USERS_1D) AS RETAINED_USERS_1D,\n        \n            SUM(RETAINED_USERS_7D) AS RETAINED_USERS_7D,\n        \n            SUM(RETAINED_USERS_14D) AS RETAINED_USERS_14D,\n        \n            SUM(RETAINED_USERS_30D) AS RETAINED_USERS_30D,\n        \n            SUM(RETAINED_USERS_60D) AS RETAINED_USERS_60D,\n        \n            SUM(RETAINED_USERS_90D) AS RETAINED_USERS_90D,\n        \n            SUM(RETAINED_USERS_180D) AS RETAINED_USERS_180D,\n        \n            SUM(RETAINED_USERS_360D) AS RETAINED_USERS_360D,\n        \n        SUM(installs) AS installs,\n        SUM(cost) AS cost,\n        SUM(totalrev_actual) AS revenue,\n        SUM(iaprev_actual) AS iap_revenue\n    FROM ua.coalesced_ua_data\n    GROUP BY 1, 2, 3, 4\n)\n\nSELECT\n    app,\n    platform,\n    month,\n    geo,\n    kpis.installs,\n    \n        kpis.RETAINED_USERS_1D,\n    \n        kpis.RETAINED_USERS_7D,\n    \n        kpis.RETAINED_USERS_14D,\n    \n        kpis.RETAINED_USERS_30D,\n    \n        kpis.RETAINED_USERS_60D,\n    \n        kpis.RETAINED_USERS_90D,\n    \n        kpis.RETAINED_USERS_180D,\n    \n        kpis.RETAINED_USERS_360D,\n    \n    kpis.cost AS ua_spend,\n    cpm.impressions,\n    cpm.cpm,\n    cpm.impressions_per_mau,\n    mau.active_users AS mau,\n    kpis.revenue,\n    kpis.iap_revenue,\n    pmau.pmau,\n    (kpis.iap_revenue / pmau.pmau)::NUMBER(12, 6) AS aprppmau,\n    engagement.avg_sessions_per_dau,\n    engagement.avg_engagement_time_per_dau,\n    engagement.avg_session_duration,\n    iap_users.d1_payers,\n    iap_users.d7_payers,\n    (iap_users.d1_payers / kpis.installs)::NUMBER(12, 6) AS d1_iap_conversion,\n    (iap_users.d7_payers / kpis.installs)::NUMBER(12, 6) AS d7_iap_conversion,\n    IFF(iap_users.d1_payers \u003e 0, (ua_spend / iap_users.d1_payers)::NUMBER(12, 6), null) AS cost_per_d1_payer,\n    IFF(iap_users.d7_payers \u003e 0, (ua_spend / iap_users.d7_payers)::NUMBER(12, 6), null) AS cost_per_d7_payer,\nFROM kpis\nFULL JOIN monthly.cpm AS cpm USING (app, platform, month, geo)\nFULL JOIN monthly.mau AS mau USING (app, platform, month, geo)\nFULL JOIN monthly.pmau AS pmau USING (app, platform, month, geo)\nFULL JOIN monthly.engagement_data AS engagement USING (app, platform, month, geo)\nFULL JOIN monthly.payer_numbers AS iap_users USING (app, platform, month, geo);"}}

20:23:17,71 root INFO got get-tables command
20:23:17,74 root INFO -- returning json: {"tables": ["monthly.engagement_data", "monthly.pmau", "ua.coalesced_ua_data", "monthly.mau", "monthly.payer_numbers", "monthly.cpm"]}
20:23:17,74 root INFO running loop
20:23:17,74 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n'Eatventure' AS app,\nLOWER(platform) AS platform,\nDATE_TRUNC('month', the_date) AS month,\nCASE WHEN\n    country = 'United States' THEN 'US'\n    ELSE 'ROW'\nEND AS geo,\nSUM(number_of_sessions)/SUM(player_count) AS avg_sessions_per_dau,\nSUM(engagement_time)/SUM(player_count) AS avg_engagement_time_per_dau,\nSUM(engagement_time)/SUM(number_of_sessions) AS avg_session_duration\nFROM monthly.sessions_ev\nWHERE month \u003e= '2023-02-01'\nGROUP BY 1,2,3,4\nUNION ALL\nSELECT\n'We are Warriors!' AS app,\nLOWER(platform) AS platform,\nDATE_TRUNC('month', the_date) AS month,\nCASE WHEN\n    country = 'United States' THEN 'US'\n    ELSE 'ROW'\nEND AS geo,\nSUM(number_of_sessions)/SUM(player_count) AS avg_sessions_per_dau,\nSUM(engagement_time)/SUM(player_count) AS avg_engagement_time_per_dau,\nSUM(engagement_time)/SUM(number_of_sessions) AS avg_session_duration\nFROM monthly.sessions_waw\nWHERE month \u003e= '2023-02-01'\nGROUP BY 1,2,3,4"}}

20:23:17,74 root INFO got get-tables command
20:23:17,75 root INFO -- returning json: {"tables": ["monthly.sessions_ev", "monthly.sessions_waw"]}
20:23:17,75 root INFO running loop
20:23:17,75 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    app,\n    platform,\n    month,\n    geo,\n    SUM(active_users) AS active_users\nFROM monthly.cohorted_mau\nGROUP BY 1, 2, 3, 4"}}

20:23:17,75 root INFO got get-tables command
20:23:17,76 root INFO -- returning json: {"tables": ["monthly.cohorted_mau"]}
20:23:17,76 root INFO running loop
20:23:17,76 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH paying_users AS (\n    SELECT\n        install_id,\n        user_age_in_days\n    FROM user.user_aggregates\n    GROUP BY 1, 2\n    HAVING SUM(revenue_iap) \u003e 0\n)\n\nSELECT\n    user.app,\n    user.platform,\n    DATE_TRUNC('month', CONVERT_TIMEZONE('CET', user.install_ts)::DATE) AS month,\n    CASE WHEN\n            user.country = 'US' THEN 'US'\n        ELSE 'ROW'\n    END AS geo,\n    COUNT(DISTINCT CASE WHEN payer.user_age_in_days = 0 THEN install_id END) AS d1_payers,\n    COUNT(DISTINCT CASE WHEN payer.user_age_in_days \u003c= 6 THEN install_id END) AS d7_payers\nFROM paying_users AS payer\nINNER JOIN user.users AS user USING (install_id)\nGROUP BY 1, 2, 3, 4"}}

20:23:17,76 root INFO got get-tables command
20:23:17,77 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,77 root INFO running loop
20:23:17,77 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH paying_users AS (\nSELECT\n    install_id\nFROM user.user_aggregates \nGROUP BY 1\nHAVING SUM(REVENUE_IAP) \u003e 0\n)\nSELECT \n    app,\n    platform,\n    DATE_TRUNC('month',revenue_date) AS month,\n    CASE WHEN\n      country = 'US' THEN 'US'\n      ELSE 'ROW'\n    END AS geo,\n    COUNT(DISTINCT device_id) AS pmau\nFROM user.user_aggregates\nJOIN paying_users USING (install_id)\nJOIN user.users USING (install_id)\nGROUP BY 1,2,3,4"}}

20:23:17,77 root INFO got get-tables command
20:23:17,78 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,78 root INFO running loop
20:23:17,78 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nSELECT\n    DATE_TRUNC('week', conversion_date) AS week,\n    app,\n    platform,\n    simplenetworknames AS network,\n    CASE WHEN\n      country = 'US' THEN 'US'\n      ELSE 'ROW'\n    END AS geo,\n    \n    SUM(COALESCE(ADREV_1D,0) + COALESCE(IAPREV_1D, 0)) AS revenue_1D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_1D,0) + COALESCE(IAPREV_1D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_1D,\n    \n    SUM(COALESCE(ADREV_7D,0) + COALESCE(IAPREV_7D, 0)) AS revenue_7D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_7D,0) + COALESCE(IAPREV_7D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_7D,\n    \n    SUM(COALESCE(ADREV_14D,0) + COALESCE(IAPREV_14D, 0)) AS revenue_14D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_14D,0) + COALESCE(IAPREV_14D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_14D,\n    \n    SUM(COALESCE(ADREV_30D,0) + COALESCE(IAPREV_30D, 0)) AS revenue_30D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_30D,0) + COALESCE(IAPREV_30D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_30D,\n    \n    SUM(COALESCE(ADREV_60D,0) + COALESCE(IAPREV_60D, 0)) AS revenue_60D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_60D,0) + COALESCE(IAPREV_60D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_60D,\n    \n    SUM(COALESCE(ADREV_90D,0) + COALESCE(IAPREV_90D, 0)) AS revenue_90D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_90D,0) + COALESCE(IAPREV_90D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_90D,\n    \n    SUM(COALESCE(ADREV_180D,0) + COALESCE(IAPREV_180D, 0)) AS revenue_180D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_180D,0) + COALESCE(IAPREV_180D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_180D,\n    \n    SUM(COALESCE(ADREV_360D,0) + COALESCE(IAPREV_360D, 0)) AS revenue_360D,\n    (IFF(SUM(cost) = 0, NULL, SUM(COALESCE(ADREV_360D,0) + COALESCE(IAPREV_360D, 0))/SUM(cost)))::NUMBER(38,6) AS ROAS_360D,\n    \n    (SUM(cost)/SUM(installs))::NUMBER(12,6) AS cpi,\n    SUM(cost) AS cost,\n    SUM(installs) AS installs\nFROM ua.ua_data\nJOIN cohorts.cohort_id USING (cohort_id)\nJOIN cohorts.creative_id USING (campaign_creative_id)\nWHERE DATE_TRUNC('week', conversion_date) \u003e= '2023-02-01'\nGROUP BY 1,2,3,4,5"}}

20:23:17,78 root INFO got get-tables command
20:23:17,84 root INFO -- returning json: {"tables": ["cohorts.creative_id", "ua.ua_data", "cohorts.cohort_id"]}
20:23:17,84 root INFO running loop
20:23:17,85 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nSELECT\n    conversion_date,\n    app,\n    platform,\n    simplenetworknames,\n    campaign_name,\n    c.country,\n    campaign_type,\n    campaign_status,\n    budget_daily,\n    COALESCE(v.TIER, 4) AS TIER,\n    \n    COALESCE(ADREV_1D,0) AS ADREV_1D,\n    COALESCE(IAPREV_1D,0) AS IAPREV_1D,\n    COALESCE(IAPREV_1D_NET,0) AS IAPREV_1D_NET,\n    COALESCE(ADREV_1D,0) + COALESCE(IAPREV_1D,0) AS TOTALREV_1D,\n    COALESCE(ADREV_1D,0) + COALESCE(IAPREV_1D_NET,0) AS TOTALREV_1D_NET,\n    COALESCE(RETAINED_USERS_1D,0) AS RETAINED_USERS_1D,\n    \n    COALESCE(ADREV_2D,0) AS ADREV_2D,\n    COALESCE(IAPREV_2D,0) AS IAPREV_2D,\n    COALESCE(IAPREV_2D_NET,0) AS IAPREV_2D_NET,\n    COALESCE(ADREV_2D,0) + COALESCE(IAPREV_2D,0) AS TOTALREV_2D,\n    COALESCE(ADREV_2D,0) + COALESCE(IAPREV_2D_NET,0) AS TOTALREV_2D_NET,\n    COALESCE(RETAINED_USERS_2D,0) AS RETAINED_USERS_2D,\n    \n    COALESCE(ADREV_3D,0) AS ADREV_3D,\n    COALESCE(IAPREV_3D,0) AS IAPREV_3D,\n    COALESCE(IAPREV_3D_NET,0) AS IAPREV_3D_NET,\n    COALESCE(ADREV_3D,0) + COALESCE(IAPREV_3D,0) AS TOTALREV_3D,\n    COALESCE(ADREV_3D,0) + COALESCE(IAPREV_3D_NET,0) AS TOTALREV_3D_NET,\n    COALESCE(RETAINED_USERS_3D,0) AS RETAINED_USERS_3D,\n    \n    COALESCE(ADREV_7D,0) AS ADREV_7D,\n    COALESCE(IAPREV_7D,0) AS IAPREV_7D,\n    COALESCE(IAPREV_7D_NET,0) AS IAPREV_7D_NET,\n    COALESCE(ADREV_7D,0) + COALESCE(IAPREV_7D,0) AS TOTALREV_7D,\n    COALESCE(ADREV_7D,0) + COALESCE(IAPREV_7D_NET,0) AS TOTALREV_7D_NET,\n    COALESCE(RETAINED_USERS_7D,0) AS RETAINED_USERS_7D,\n    \n    COALESCE(ADREV_14D,0) AS ADREV_14D,\n    COALESCE(IAPREV_14D,0) AS IAPREV_14D,\n    COALESCE(IAPREV_14D_NET,0) AS IAPREV_14D_NET,\n    COALESCE(ADREV_14D,0) + COALESCE(IAPREV_14D,0) AS TOTALREV_14D,\n    COALESCE(ADREV_14D,0) + COALESCE(IAPREV_14D_NET,0) AS TOTALREV_14D_NET,\n    COALESCE(RETAINED_USERS_14D,0) AS RETAINED_USERS_14D,\n    \n    COALESCE(ADREV_30D,0) AS ADREV_30D,\n    COALESCE(IAPREV_30D,0) AS IAPREV_30D,\n    COALESCE(IAPREV_30D_NET,0) AS IAPREV_30D_NET,\n    COALESCE(ADREV_30D,0) + COALESCE(IAPREV_30D,0) AS TOTALREV_30D,\n    COALESCE(ADREV_30D,0) + COALESCE(IAPREV_30D_NET,0) AS TOTALREV_30D_NET,\n    COALESCE(RETAINED_USERS_30D,0) AS RETAINED_USERS_30D,\n    \n    COALESCE(ADREV_60D,0) AS ADREV_60D,\n    COALESCE(IAPREV_60D,0) AS IAPREV_60D,\n    COALESCE(IAPREV_60D_NET,0) AS IAPREV_60D_NET,\n    COALESCE(ADREV_60D,0) + COALESCE(IAPREV_60D,0) AS TOTALREV_60D,\n    COALESCE(ADREV_60D,0) + COALESCE(IAPREV_60D_NET,0) AS TOTALREV_60D_NET,\n    COALESCE(RETAINED_USERS_60D,0) AS RETAINED_USERS_60D,\n    \n    COALESCE(ADREV_90D,0) AS ADREV_90D,\n    COALESCE(IAPREV_90D,0) AS IAPREV_90D,\n    COALESCE(IAPREV_90D_NET,0) AS IAPREV_90D_NET,\n    COALESCE(ADREV_90D,0) + COALESCE(IAPREV_90D,0) AS TOTALREV_90D,\n    COALESCE(ADREV_90D,0) + COALESCE(IAPREV_90D_NET,0) AS TOTALREV_90D_NET,\n    COALESCE(RETAINED_USERS_90D,0) AS RETAINED_USERS_90D,\n    \n    COALESCE(ADREV_ACTUAL,0) AS ADREV_ACTUAL,\n    COALESCE(IAPREV_ACTUAL,0) AS IAPREV_ACTUAL,\n    COALESCE(IAPREV_ACTUAL_NET,0)AS IAPREV_ACTUAL_NET,\n    COALESCE(ADREV_ACTUAL,0) + COALESCE(IAPREV_ACTUAL,0) AS TOTALREV_ACTUAL,\n    COALESCE(ADREV_ACTUAL,0) + COALESCE(IAPREV_ACTUAL_NET,0) AS TOTALREV_ACTUAL_NET,\n    COALESCE(profit_actual,0) AS profit_actual,\n    COALESCE(DAU,0) AS DAU,\n    COALESCE(impressions,0) AS IMPRESSIONS,\n    COALESCE(clicks,0) AS CLICKS,\n    COALESCE(installs,0) AS installs,\n    COALESCE(COST, 0) AS COST,\n    COALESCE(PROBABILISTIC_COST, 0) AS PROBABILISTIC_COST,\n    predicted_totalrev_7d_net,\n    predicted_totalrev_30d_net,\n    predicted_totalrev_60d_net,\n    baseline_totalrev_7d_net,\n    baseline_totalrev_30d_net,\n    baseline_totalrev_60d_net,\n    number_of_iaps,\n    NUMBER_OF_PURCHASERS,\n    purchasers_1D,\n    purchasers_3D,\n    purchasers_7D,\n    number_of_iaps_1D,\n    number_of_iaps_3D,\n    number_of_iaps_7D\nFROM dashboard.data\nJOIN ua.campaign_id c USING (campaign_id)\nLEFT JOIN core.main.vat v ON c.COUNTRY = ALPHA_2_CODE"}}

20:23:17,85 root INFO got get-tables command
20:23:17,91 root INFO -- returning json: {"tables": ["ua.campaign_id", "dashboard.data", "core.main.vat"]}
20:23:17,91 root INFO running loop
20:23:17,91 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH RankedPredictions AS (\n    SELECT\n        p.conversion_date,\n        p.campaign_id,\n        p.predicted_day,\n        p.revenue_prediction,\n        p.entry_timestamp,\n        p.prediction_priority,\n        RANK() OVER (PARTITION BY p.conversion_date, p.campaign_id, p.predicted_day ORDER BY p.prediction_priority DESC, p.entry_timestamp DESC) AS rank\n    FROM ml.data p\n)\nSELECT\n    rp.conversion_date,\n    rp.campaign_id,\n    MAX(CASE WHEN rp.predicted_day = 7 THEN rp.revenue_prediction END) AS predicted_totalrev_7d_net,\n    MAX(CASE WHEN rp.predicted_day = 30 THEN rp.revenue_prediction END) AS predicted_totalrev_30d_net,\n    MAX(CASE WHEN rp.predicted_day = 60 THEN rp.revenue_prediction END) AS predicted_totalrev_60d_net,\n    MAX(rp.entry_timestamp) AS latest_entry_timestamp,\n    MAX(rp.prediction_priority) AS max_prediciton_priority\nFROM RankedPredictions AS rp\nWHERE\n    rp.rank = 1\nGROUP BY\n    rp.conversion_date, rp.campaign_id;"}}

20:23:17,91 root INFO got get-tables command
20:23:17,92 root INFO -- returning json: {"tables": ["ml.data"]}
20:23:17,92 root INFO running loop
20:23:17,93 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nSELECT\n    conversion_date,\n    campaign_id,\n    campaign_type,\n    campaign_status,\n    ctype.budget_daily,\n    f.d7_conversion_window,\n    \n    ADREV_1D,\n    IAPREV_1D,\n    IAPREV_1D_NET,\n    RETAINED_USERS_1D,\n    \n    ADREV_2D,\n    IAPREV_2D,\n    IAPREV_2D_NET,\n    RETAINED_USERS_2D,\n    \n    ADREV_3D,\n    IAPREV_3D,\n    IAPREV_3D_NET,\n    RETAINED_USERS_3D,\n    \n    ADREV_7D,\n    IAPREV_7D,\n    IAPREV_7D_NET,\n    RETAINED_USERS_7D,\n    \n    ADREV_14D,\n    IAPREV_14D,\n    IAPREV_14D_NET,\n    RETAINED_USERS_14D,\n    \n    ADREV_30D,\n    IAPREV_30D,\n    IAPREV_30D_NET,\n    RETAINED_USERS_30D,\n    \n    ADREV_60D,\n    IAPREV_60D,\n    IAPREV_60D_NET,\n    RETAINED_USERS_60D,\n    \n    ADREV_90D,\n    IAPREV_90D,\n    IAPREV_90D_NET,\n    RETAINED_USERS_90D,\n    \n    ADREV_ACTUAL,\n    IAPREV_ACTUAL,\n    IAPREV_ACTUAL_NET,\n    profit_actual,\n    DAU,\n    IMPRESSIONS,\n    CLICKS,\n    installs,\n    COST,\n    PROBABILISTIC_COST,\n    p.predicted_totalrev_7d_net,\n    p.predicted_totalrev_30d_net,\n    p.predicted_totalrev_60d_net,\n    predicted_7d_rev::NUMBER(38,6) AS baseline_totalrev_7d_net,\n    predicted_30d_rev::NUMBER(38,6) AS baseline_totalrev_30d_net,\n    predicted_60d_rev::NUMBER(38,6) AS baseline_totalrev_60d_net,\n    u.number_of_iaps,\n    u.NUMBER_OF_PURCHASERS,\n    u.purchasers_1D,\n    u.purchasers_3D,\n    u.purchasers_7D,\n    u.number_of_iaps_1D,\n    u.number_of_iaps_3D,\n    u.number_of_iaps_7D,\n    p.max_prediciton_priority,\n    p.latest_entry_timestamp\nFROM ua.campaign_level AS c\nLEFT JOIN ua.purchases_per_campaign u USING (campaign_id, conversion_date)\nLEFT JOIN dashboard.current_predictions p USING (campaign_id, conversion_date)\nLEFT JOIN features.campaign_type f USING (campaign_id)\nLEFT JOIN ml.baseline USING (conversion_date, campaign_id)\nLEFT JOIN ua.campaign_id AS cid USING (campaign_id)\nLEFT JOIN ua.campaign_type AS ctype ON ctype.name_network = cid.campaign_name;"}}

20:23:17,93 root INFO got get-tables command
20:23:17,95 root INFO -- returning json: {"tables": ["ml.baseline", "features.campaign_type", "ua.purchases_per_campaign", "ua.campaign_type", "ua.campaign_id", "ua.campaign_level", "dashboard.current_predictions"]}
20:23:17,95 root INFO running loop
20:23:17,95 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    campaign_id,\n    campaign_name,\n    COALESCE(type_status, 'other') as campaign_status,\n    COALESCE(CASE \n      WHEN LOWER(type_optimization) LIKE 'installs' THEN 'cpi'\n      WHEN LOWER(type_optimization) LIKE 'clicks' THEN 'cpi'\n      WHEN LOWER(type_optimization) LIKE 'impressions' THEN 'cpi' \n      WHEN LOWER(type_optimization) LIKE '%events%' THEN 'cpa'\n      WHEN LOWER(type_optimization) LIKE 'ad value' THEN 'ad'\n      WHEN LOWER(type_optimization) LIKE 'ad roas%' THEN 'ad'\n      WHEN LOWER(type_optimization) LIKE 'iap+ad value' THEN 'bld'\n      WHEN LOWER(type_optimization) LIKE 'iap value' THEN 'iap'\n      ELSE 'other'\n    END, 'missing') AS campaign_type,\n    CONTAINS(LOWER(campaign_name), 'd7') AS d7_conversion_window\nFROM ua.campaign_id\nLEFT JOIN ua.campaign_type ON campaign_name = name_network"}}

20:23:17,95 root INFO got get-tables command
20:23:17,96 root INFO -- returning json: {"tables": ["ua.campaign_id", "ua.campaign_type"]}
20:23:17,96 root INFO running loop
20:23:17,96 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n   conversion_date,\n   campaign_id,\n   IAPREV_1D_NET,\n   IAPREV_2D_NET,\n   IAPREV_3D_NET,\n   ADREV_1D,\n   ADREV_2D,\n   ADREV_3D,\n   installs,\n   RETAINED_USERS_1D,\n   RETAINED_USERS_2D,\n   RETAINED_USERS_3D,\n   RETAINED_USERS_7D,\n   retained_users_14d,\n   cost_pred,\n   IAPREV_30D_actual,\n   IAPREV_14D_actual,\n   IAPREV_7D_actual,\n   IAPREV_3D_actual,\n   IAPREV_2D_actual,\n   ADREV_30D_actual,\n   ADREV_14D_actual,\n   ADREV_7D_actual,\n   ADREV_3D_actual,\n   ADREV_2D_actual,\n   IAPREV_1D_NET_ROLLING,\n   ADREV_1D_ROLLING,\n   IAPREV_2D_NET_ROLLING,\n   ADREV_2D_ROLLING,\n   IAPREV_3D_NET_ROLLING,\n   ADREV_3D_ROLLING,\n   IAPREV_1D_NET_LAGGED_7D,\n   IAPREV_1D_NET_LAGGED_30D,\n   ADREV_1D_LAGGED_7D,\n   ADREV_1D_LAGGED_30D,\n   IAPREV_2D_NET_LAGGED_7D,\n   IAPREV_2D_NET_LAGGED_30D,\n   ADREV_2D_LAGGED_7D,\n   ADREV_2D_LAGGED_30D,\n   IAPREV_3D_NET_LAGGED_7D,\n   IAPREV_3D_NET_LAGGED_30D,\n   ADREV_3D_LAGGED_7D,\n   ADREV_3D_LAGGED_30D,\n   spend_per_campaign,\n   installs_per_campaign,\n   spend_per_country,\n   installs_per_country,\n   rolling_installs,\n   rolling_spend,\n   relative_spend_per_campaign,\n   relative_installs_per_campaign,\n   relative_spend_per_country,\n   relative_installs_per_country,\n   cpi,\n   retention_rate_1d,\n   retention_rate_2d,\n   retention_rate_3d,\n   retention_rate_7d,\n   retention_rate_14d,\n   other_ohe,\n   cpi_ohe,\n   cpa_ohe,\n   ad_ohe,\n   bld_ohe,\n   iap_ohe,\n   eatventure_ohe,\n   waw_ohe,\n   pocketchess_ohe,\n   ios_ohe,\n   android_ohe,\n   days_since_2022,\n   sample_weight\nFROM features.incremental_revenue\nJOIN features.lagged_features USING (campaign_id, conversion_date)\nJOIN features.retention_rate USING (campaign_id, conversion_date)\nJOIN features.relative_features USING (campaign_id, conversion_date)\nJOIN features.one_hot_encoding USING (campaign_id)\nWHERE CONVERSION_DATE \u003e= '2023-02-01';"}}

20:23:17,96 root INFO got get-tables command
20:23:17,97 root INFO -- returning json: {"tables": ["features.relative_features", "features.incremental_revenue", "features.lagged_features", "features.one_hot_encoding", "features.retention_rate"]}
20:23:17,98 root INFO running loop
20:23:17,98 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT \n    conversion_date,\n    campaign_id,\n    IAPREV_1D_NET,\n    ADREV_1D,\n    IAPREV_2D_ACTUAL,\n    ADREV_2D_ACTUAL,\n    IAPREV_3D_ACTUAL,\n    COALESCE(ADREV_3D_ACTUAL, 0) AS ADREV_3D_ACTUAL,\n    IAPREV_7D_ACTUAL,\n    ADREV_7D_ACTUAL,\n    IAPREV_14D_ACTUAL,\n    ADREV_14D_ACTUAL,\n    IAPREV_30D_ACTUAL,\n    ADREV_30D_ACTUAL,\n    COALESCE(IAPREV_1D_NET_ROLLING, 0) AS IAPREV_1D_NET_ROLLING,\n    COALESCE(IAPREV_2D_NET_ROLLING, 0) AS IAPREV_2D_NET_ROLLING,\n    COALESCE(IAPREV_3D_NET_ROLLING, 0) AS IAPREV_3D_NET_ROLLING,\n    COST_PRED,\n    COALESCE(ADREV_1D_ROLLING, 0) AS ADREV_1D_ROLLING,\n    COALESCE(ADREV_2D_ROLLING, 0) AS ADREV_2D_ROLLING,\n    RETENTION_RATE_1D,\n    RETENTION_RATE_2D,\n    RETENTION_RATE_3D,\n    RETENTION_RATE_7D,\n    RETENTION_RATE_14D,\n    RETAINED_USERS_1D,\n    RETAINED_USERS_2D,\n    RETAINED_USERS_3D,\n    RETAINED_USERS_7D,\n    RETAINED_USERS_14D,\n    COALESCE(IAPREV_1D_NET_LAGGED_7D, 0) AS IAPREV_1D_NET_LAGGED_7D,\n    INSTALLS,\n    RELATIVE_INSTALLS_PER_CAMPAIGN,\n    RELATIVE_SPEND_PER_COUNTRY,\n    RELATIVE_INSTALLS_PER_COUNTRY,\n    CPI,\n    CPI_OHE,\n    CPA_OHE,\n    AD_OHE,\n    BLD_OHE,\n    c_type.d7_conversion_window,\n    iap_ohe,\n    other_ohe,\n    EATVENTURE_OHE,\n    WAW_OHE,\n    POCKETCHESS_OHE,\n    v.tier,\n    days_since_2022,\n    sample_weight \nFROM features.feature_store f\nJOIN ua.campaign_id c_id USING (campaign_id)\nJOIN features.campaign_type c_type USING (campaign_id)\nLEFT JOIN core.main.vat v ON c_id.COUNTRY = ALPHA_2_CODE\nWHERE platform IN ('ios', 'android')\nAND CAMPAIGN_TYPE IN ('bld', 'cpa', 'cpi', 'ad', 'iap', 'other', 'missing')\nAND campaign_status IN ('Discovery', 'Performance', 'Global Launch', 'Experiment', 'other','Creative Test')\nAND app IN ('Eatventure', 'We are Warriors!')\nAND cost_pred \u003e 0\nAND installs \u003e= 10;"}}

20:23:17,98 root INFO got get-tables command
20:23:17,100 root INFO -- returning json: {"tables": ["ua.campaign_id", "features.feature_store", "core.main.vat", "features.campaign_type"]}
20:23:17,100 root INFO running loop
20:23:17,100 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT \n    f.conversion_date,\n    f.campaign_id,\n    f.IAPREV_1D_NET,\n    f.ADREV_1D,\n    f.IAPREV_2D_ACTUAL,\n    f.ADREV_2D_ACTUAL,\n    f.IAPREV_3D_ACTUAL,\n    COALESCE(f.ADREV_3D_ACTUAL, 0) AS ADREV_3D_ACTUAL,\n    COALESCE(f.IAPREV_1D_NET_ROLLING, 0) AS IAPREV_1D_NET_ROLLING,\n    COALESCE(f.IAPREV_2D_NET_ROLLING, 0) AS IAPREV_2D_NET_ROLLING,\n    COALESCE(f.IAPREV_3D_NET_ROLLING, 0) AS IAPREV_3D_NET_ROLLING,\n    COALESCE(f.ADREV_1D_ROLLING, 0) AS ADREV_1D_ROLLING,\n    COALESCE(f.ADREV_2D_ROLLING, 0) AS ADREV_2D_ROLLING,\n    f.RETENTION_RATE_1D,\n    f.RETENTION_RATE_2D,\n    COALESCE(f.IAPREV_1D_NET_LAGGED_7D, 0) AS IAPREV_1D_NET_LAGGED_7D,\n    f.INSTALLS,\n    f.RELATIVE_INSTALLS_PER_COUNTRY,\n    f.EATVENTURE_OHE,\n    f.WAW_OHE,\n    f.POCKETCHESS_OHE,\n    v.tier,\n    f.days_since_2022,\n    f.sample_weight\nFROM features.feature_store f\nJOIN ua.campaign_id c_id USING (campaign_id)\nLEFT JOIN features.features_cleaned c\n  ON f.conversion_date = c.conversion_date AND f.campaign_id = c.campaign_id\nLEFT JOIN core.main.vat v ON c_id.COUNTRY = ALPHA_2_CODE\nWHERE c.conversion_date IS NULL AND c.campaign_id IS NULL\n  AND (f.IAPREV_1D_NET+ f.ADREV_1D) \u003e 0\n  AND f.installs \u003e 25\n  AND c_id.simplenetworknames = 'Other'\n  AND c_id.platform IN ('ios', 'android')\n  AND c_id.app IN ('Eatventure', 'We are Warriors!')"}}

20:23:17,100 root INFO got get-tables command
20:23:17,102 root INFO -- returning json: {"tables": ["ua.campaign_id", "features.feature_store", "core.main.vat", "features.features_cleaned"]}
20:23:17,102 root INFO running loop
20:23:17,102 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n  conversion_date,\n  campaign_id,\n  COALESCE(IAPREV_1D_NET, 0) AS IAPREV_1D_NET,\n  COALESCE(IAPREV_2D_NET, 0) AS IAPREV_2D_NET,\n  COALESCE(IAPREV_3D_NET, 0) AS IAPREV_3D_NET,\n  COALESCE(ADREV_1D, 0) AS ADREV_1D,\n  COALESCE(ADREV_2D, 0) AS ADREV_2D,\n  COALESCE(ADREV_3D, 0) AS ADREV_3D,\n  installs,\n  RETAINED_USERS_1D,\n  RETAINED_USERS_2D,\n  RETAINED_USERS_3D,\n  RETAINED_USERS_7D,\n  retained_users_14d,\n  retained_users_30d,\n  CASE\n      WHEN simplenetworknames = 'Applovin' AND platform = 'ios' THEN COALESCE(probabilistic_cost,0)\n      ELSE COALESCE(cost,0)\n  END AS cost_pred,\n  (COALESCE(IAPREV_3D_NET,0) - COALESCE(IAPREV_2D_NET,0)) AS IAPREV_3D_actual,\n  (COALESCE(IAPREV_2D_NET,0) - COALESCE(IAPREV_1D_NET,0)) AS IAPREV_2D_actual,\n  (COALESCE(ADREV_3D,0) - COALESCE(ADREV_2D,0)) AS ADREV_3D_actual,\n  (COALESCE(ADREV_2D,0) - COALESCE(ADREV_1D,0)) AS ADREV_2D_actual,\n  COALESCE(ADREV_7D,0) - COALESCE(ADREV_3D,0) AS ADREV_7D_actual,\n  COALESCE(IAPREV_7D_NET,0) - COALESCE(IAPREV_3D_NET,0) AS IAPREV_7D_actual,\n  COALESCE(ADREV_14D,0) - COALESCE(ADREV_7D,0) AS ADREV_14D_actual,\n  COALESCE(IAPREV_14D_NET,0) - COALESCE(IAPREV_7D_NET,0) AS IAPREV_14D_actual,\n  COALESCE(ADREV_30D,0) - COALESCE(ADREV_14D,0) AS ADREV_30D_actual,\n  COALESCE(IAPREV_30D_NET,0) - COALESCE(IAPREV_14D_NET,0) AS IAPREV_30D_actual,\n  DATEDIFF(DAY, '2022-01-01', CONVERSION_DATE) AS days_since_2022,\n  (days_since_2022::DOUBLE / MAX(days_since_2022) OVER ())::DOUBLE as sample_weight \nFROM ua.campaign_level\nJOIN ua.campaign_id USING (campaign_id)\nWHERE CONVERSION_DATE \u003e= '2023-02-01';"}}

20:23:17,102 root INFO got get-tables command
20:23:17,104 root INFO -- returning json: {"tables": ["ua.campaign_id", "ua.campaign_level"]}
20:23:17,104 root INFO running loop
20:23:17,105 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"-- \n\nSELECT\n  conversion_date,\n  campaign_id,\n  AVG(IAPREV_1D_NET) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS IAPREV_1D_NET_ROLLING,\n  AVG(ADREV_1D) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS ADREV_1D_ROLLING,\n  AVG(IAPREV_2D_actual) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS IAPREV_2D_NET_ROLLING,\n  AVG(ADREV_2D_actual) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS ADREV_2D_ROLLING,\n  AVG(IAPREV_3D_actual) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS IAPREV_3D_NET_ROLLING,\n  AVG(ADREV_3D_actual) OVER(PARTITION BY campaign_id ORDER BY CONVERSION_DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS ADREV_3D_ROLLING,\n  LAG(IAPREV_1D_NET, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_1D_NET_LAGGED_7D,\n  LAG(IAPREV_1D_NET, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_1D_NET_LAGGED_30D,\n  LAG(ADREV_1D, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_1D_LAGGED_7D,\n  LAG(ADREV_1D, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_1D_LAGGED_30D,\n  LAG(IAPREV_2D_actual, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_2D_NET_LAGGED_7D,\n  LAG(IAPREV_2D_actual, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_2D_NET_LAGGED_30D,\n  LAG(ADREV_2D_actual, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_2D_LAGGED_7D,\n  LAG(ADREV_2D_actual, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_2D_LAGGED_30D,\n  LAG(IAPREV_3D_actual, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_3D_NET_LAGGED_7D,\n  LAG(IAPREV_3D_actual, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS IAPREV_3D_NET_LAGGED_30D,\n  LAG(ADREV_3D_actual, 7) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_3D_LAGGED_7D,\n  LAG(ADREV_3D_actual, 30) OVER(PARTITION BY CAMPAIGN_ID ORDER BY CONVERSION_DATE) AS ADREV_3D_LAGGED_30D\nFROM features.incremental_revenue;"}}

20:23:17,105 root INFO got get-tables command
20:23:17,107 root INFO -- returning json: {"tables": ["features.incremental_revenue"]}
20:23:17,107 root INFO running loop
20:23:17,107 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH ctype AS (\nSELECT\n    campaign_id,\n    IFF(campaign_type = 'other', 1, 0) AS other_ohe,\n    IFF(campaign_type = 'cpi', 1, 0) AS cpi_ohe,\n    IFF(campaign_type = 'cpa', 1, 0) AS cpa_ohe,\n    IFF(campaign_type = 'ad', 1, 0) AS ad_ohe,\n    IFF(campaign_type = 'bld', 1, 0) AS bld_ohe,\n    IFF(campaign_type = 'iap', 1, 0) AS iap_ohe\nFROM features.campaign_type\n),\nplatform_app AS (\nSELECT \n    campaign_id,\n    IFF(LOWER(app) = 'eatventure', 1, 0) AS eatventure_ohe,\n    IFF(LOWER(app) = 'we are warriors!', 1, 0) AS waw_ohe,\n    IFF(LOWER(app) = 'pocketchess', 1, 0) AS pocketchess_ohe,\n    IFF(LOWER(platform) = 'ios', 1, 0) AS ios_ohe,\n    IFF(LOWER(platform) = 'android', 1, 0) AS android_ohe\nFROM ua.campaign_id\n)\nSELECT \n    campaign_id,\n    other_ohe,\n    cpi_ohe,\n    cpa_ohe,\n    ad_ohe,\n    bld_ohe,\n    iap_ohe,\n    eatventure_ohe,\n    waw_ohe,\n    pocketchess_ohe,\n    ios_ohe,\n    android_ohe\nFROM ctype\nJOIN platform_app USING (campaign_id);"}}

20:23:17,107 root INFO got get-tables command
20:23:17,109 root INFO -- returning json: {"tables": ["ua.campaign_id", "features.campaign_type"]}
20:23:17,109 root INFO running loop
20:23:17,109 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    conversion_date,\n    campaign_id,\n    SUM(cost_pred) OVER (PARTITION BY app,  campaign_name, conversion_date) AS spend_per_campaign,\n    SUM(installs) OVER (PARTITION BY app,  campaign_name, conversion_date) AS installs_per_campaign,\n    SUM(cost_pred) OVER (PARTITION BY app, country, conversion_date) AS spend_per_country,\n    SUM(installs) OVER (PARTITION BY app, country, conversion_date) AS installs_per_country,\n    SUM(installs) OVER (PARTITION BY campaign_id ORDER BY conversion_date ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS rolling_installs,\n    SUM(cost_pred) OVER (PARTITION BY campaign_id ORDER BY conversion_date ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS rolling_spend,\n    CASE\n        WHEN spend_per_campaign = 0 THEN NULL\n        ELSE cost_pred/spend_per_campaign\n    END AS relative_spend_per_campaign,\n    CASE\n        WHEN installs_per_campaign = 0 THEN NULL\n        ELSE installs/installs_per_campaign\n    END AS relative_installs_per_campaign,\n    CASE\n        WHEN spend_per_country = 0 THEN NULL\n        ELSE cost_pred/spend_per_country\n    END AS relative_spend_per_country,\n    CASE\n        WHEN installs_per_country = 0 THEN NULL\n        ELSE installs/installs_per_country\n    END AS relative_installs_per_country,\n    CASE\n        WHEN rolling_installs = 0 THEN NULL\n        ELSE rolling_spend/rolling_installs\n    END AS cpi\nFROM features.incremental_revenue\nJOIN ua.campaign_id USING(campaign_id)"}}

20:23:17,109 root INFO got get-tables command
20:23:17,111 root INFO -- returning json: {"tables": ["ua.campaign_id", "features.incremental_revenue"]}
20:23:17,111 root INFO running loop
20:23:17,111 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    campaign_id,\n    CONVERSION_DATE,\n    CASE\n        WHEN INSTALLS = 0 THEN NULL\n        ELSE retained_users_1d / INSTALLS\n    END AS retention_rate_1d,\n    CASE\n        WHEN INSTALLS = 0 THEN NULL\n        ELSE retained_users_2d / INSTALLS\n    END AS retention_rate_2d,\n    CASE\n        WHEN INSTALLS = 0 THEN NULL\n        ELSE retained_users_3d / INSTALLS\n    END AS retention_rate_3d,\n    CASE\n        WHEN INSTALLS = 0 THEN NULL\n        ELSE retained_users_7d / INSTALLS\n    END AS retention_rate_7d,\n    CASE\n        WHEN INSTALLS = 0 THEN NULL\n        ELSE retained_users_14d / INSTALLS\n    END AS retention_rate_14d\nFROM ua.campaign_level"}}

20:23:17,111 root INFO got get-tables command
20:23:17,112 root INFO -- returning json: {"tables": ["ua.campaign_level"]}
20:23:17,112 root INFO running loop
20:23:17,113 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D14_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    5 as prediction_priority,\n    'D14_D30' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_14D_ACTUAL , ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , ADREV_7D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_14D_ACTUAL , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAPREV_7D_ACTUAL , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , RETENTION_RATE_3D , RETENTION_RATE_7D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 15 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 15\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_14D_ACTUAL IS NOT NULL  AND  ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  ADREV_7D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_14D_ACTUAL IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAPREV_7D_ACTUAL IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  RETENTION_RATE_3D IS NOT NULL  AND  RETENTION_RATE_7D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,113 root INFO got get-tables command
20:23:17,114 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D14_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curr"}
20:23:17,114 root INFO running loop
20:23:17,115 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D14_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    5 as prediction_priority,\n    'D14_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_14D_ACTUAL , ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , ADREV_7D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_14D_ACTUAL , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAPREV_7D_ACTUAL , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , RETENTION_RATE_3D , RETENTION_RATE_7D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 15 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 15\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_14D_ACTUAL IS NOT NULL  AND  ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  ADREV_7D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_14D_ACTUAL IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAPREV_7D_ACTUAL IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  RETENTION_RATE_3D IS NOT NULL  AND  RETENTION_RATE_7D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,115 root INFO got get-tables command
20:23:17,115 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D14_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curr"}
20:23:17,115 root INFO running loop
20:23:17,116 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D30' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,116 root INFO got get-tables command
20:23:17,116 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,116 root INFO running loop
20:23:17,117 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D30_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,117 root INFO got get-tables command
20:23:17,117 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,117 root INFO running loop
20:23:17,118 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,118 root INFO got get-tables command
20:23:17,118 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,118 root INFO running loop
20:23:17,119 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D60_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,119 root INFO got get-tables command
20:23:17,119 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,119 root INFO running loop
20:23:17,120 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D7' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,120 root INFO got get-tables command
20:23:17,120 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curren"}
20:23:17,120 root INFO running loop
20:23:17,120 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D7_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,120 root INFO got get-tables command
20:23:17,121 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n "}
20:23:17,121 root INFO running loop
20:23:17,121 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D30' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,121 root INFO got get-tables command
20:23:17,122 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,122 root INFO running loop
20:23:17,122 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D30_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,122 root INFO got get-tables command
20:23:17,122 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,122 root INFO running loop
20:23:17,123 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,123 root INFO got get-tables command
20:23:17,123 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,123 root INFO running loop
20:23:17,124 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D60_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,124 root INFO got get-tables command
20:23:17,124 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,124 root INFO running loop
20:23:17,125 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D7' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,125 root INFO got get-tables command
20:23:17,126 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curren"}
20:23:17,126 root INFO running loop
20:23:17,126 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D2_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    2 as prediction_priority,\n    'D2_D7_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 3 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 3\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,126 root INFO got get-tables command
20:23:17,126 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D2_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n "}
20:23:17,126 root INFO running loop
20:23:17,127 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D30_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    6 as prediction_priority,\n    'D30_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_14D_ACTUAL , ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_30D_ACTUAL , ADREV_3D_ACTUAL , ADREV_7D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_14D_ACTUAL , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_30D_ACTUAL , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAPREV_7D_ACTUAL , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_14D , RETENTION_RATE_1D , RETENTION_RATE_2D , RETENTION_RATE_3D , RETENTION_RATE_7D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 31 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 31\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_14D_ACTUAL IS NOT NULL  AND  ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_30D_ACTUAL IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  ADREV_7D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_14D_ACTUAL IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_30D_ACTUAL IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAPREV_7D_ACTUAL IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_14D IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  RETENTION_RATE_3D IS NOT NULL  AND  RETENTION_RATE_7D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,127 root INFO got get-tables command
20:23:17,128 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D30_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curr"}
20:23:17,128 root INFO running loop
20:23:17,129 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D30' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,129 root INFO got get-tables command
20:23:17,129 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,129 root INFO running loop
20:23:17,130 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D30_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,130 root INFO got get-tables command
20:23:17,130 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,130 root INFO running loop
20:23:17,131 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,131 root INFO got get-tables command
20:23:17,131 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,131 root INFO running loop
20:23:17,132 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D60_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,132 root INFO got get-tables command
20:23:17,132 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D60_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:17,132 root INFO running loop
20:23:17,133 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D7' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,133 root INFO got get-tables command
20:23:17,133 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D7 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curren"}
20:23:17,133 root INFO running loop
20:23:17,134 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D3_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    7 AS predicted_day,\n    3 as prediction_priority,\n    'D3_D7_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_7D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 4 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 4\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,134 root INFO got get-tables command
20:23:17,135 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D3_D7_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n "}
20:23:17,135 root INFO running loop
20:23:17,136 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D7_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    4 as prediction_priority,\n    'D7_D30' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , ADREV_7D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAPREV_7D_ACTUAL , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , RETENTION_RATE_3D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 8 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 8\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  ADREV_7D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAPREV_7D_ACTUAL IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  RETENTION_RATE_3D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,136 root INFO got get-tables command
20:23:17,136 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D7_D30 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,136 root INFO running loop
20:23:17,137 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D7_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    60 AS predicted_day,\n    4 as prediction_priority,\n    'D7_D60' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , ADREV_2D_ACTUAL , ADREV_2D_ROLLING , ADREV_3D_ACTUAL , ADREV_7D_ACTUAL , AD_OHE , BLD_OHE , COST_PRED , CPA_OHE , CPI , CPI_OHE , D7_CONVERSION_WINDOW , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , IAPREV_2D_ACTUAL , IAPREV_2D_NET_ROLLING , IAPREV_3D_ACTUAL , IAPREV_3D_NET_ROLLING , IAPREV_7D_ACTUAL , IAP_OHE , INSTALLS , OTHER_OHE , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_CAMPAIGN , RELATIVE_INSTALLS_PER_COUNTRY , RELATIVE_SPEND_PER_COUNTRY , RETENTION_RATE_1D , RETENTION_RATE_2D , RETENTION_RATE_3D , TIER , WAW_OHE  ):PREDICTED_TOTALREV_60D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_cleaned\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 8 AND '2024-07-16'::DATE AND conversion_date \u003c= CURRENT_DATE() - 8\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  ADREV_2D_ACTUAL IS NOT NULL  AND  ADREV_2D_ROLLING IS NOT NULL  AND  ADREV_3D_ACTUAL IS NOT NULL  AND  ADREV_7D_ACTUAL IS NOT NULL  AND  AD_OHE IS NOT NULL  AND  BLD_OHE IS NOT NULL  AND  COST_PRED IS NOT NULL  AND  CPA_OHE IS NOT NULL  AND  CPI IS NOT NULL  AND  CPI_OHE IS NOT NULL  AND  D7_CONVERSION_WINDOW IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  IAPREV_2D_ACTUAL IS NOT NULL  AND  IAPREV_2D_NET_ROLLING IS NOT NULL  AND  IAPREV_3D_ACTUAL IS NOT NULL  AND  IAPREV_3D_NET_ROLLING IS NOT NULL  AND  IAPREV_7D_ACTUAL IS NOT NULL  AND  IAP_OHE IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  OTHER_OHE IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_CAMPAIGN IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  RELATIVE_SPEND_PER_COUNTRY IS NOT NULL  AND  RETENTION_RATE_1D IS NOT NULL  AND  RETENTION_RATE_2D IS NOT NULL  AND  RETENTION_RATE_3D IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:17,137 root INFO got get-tables command
20:23:17,137 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D7_D60 VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    curre"}
20:23:17,137 root INFO running loop
20:23:17,138 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH targets AS (\n  SELECT\n    conversion_date,\n    campaign_id,\n    COALESCE(IAPREV_3D_NET, 0) + COALESCE(ADREV_3D, 0) AS totalrev_3d_net,\n    COALESCE(IAPREV_7D_NET, 0) + COALESCE(ADREV_7D, 0) AS totalrev_7d_net,\n    COALESCE(IAPREV_30D_NET, 0) + COALESCE(ADREV_30D, 0) AS totalrev_30d_net,\n    COALESCE(IAPREV_60D_NET, 0) + COALESCE(ADREV_60D, 0) AS totalrev_60d_net\n  FROM ua.campaign_level\n  WHERE totalrev_3d_net \u003e 0\n),\nmultipliers AS(\n  SELECT \n    conversion_date,\n    campaign_id,\n    TOTALREV_7D_NET / totalrev_3d_net as multiplier_7d,\n    TOTALREV_30D_NET / totalrev_3d_net as multiplier_30d,\n    TOTALREV_60D_NET / totalrev_3d_net as multiplier_60d\n  FROM targets\n)\nSELECT\n    tt.conversion_date,\n    tt.campaign_id,\n    m7.multiplier_7d * totalrev_3d_net AS predicted_7d_rev,\n    m30.multiplier_30d * totalrev_3d_net AS predicted_30d_rev,\n    m60.multiplier_60d * totalrev_3d_net AS predicted_60d_rev,\n    'baseline' AS model,\n    'v2' AS version\n  FROM \n    targets tt\n  LEFT JOIN multipliers m7\n    ON tt.campaign_id = m7.campaign_id\n    AND tt.conversion_date = DATEADD(day, 7, m7.conversion_date)\n  LEFT JOIN multipliers m30\n    ON tt.campaign_id = m30.campaign_id\n    AND tt.conversion_date = DATEADD(day, 30, m30.conversion_date)\n  LEFT JOIN multipliers m60\n    ON tt.campaign_id = m60.campaign_id\n    AND tt.conversion_date = DATEADD(day, 60, m60.conversion_date);"}}

20:23:17,138 root INFO got get-tables command
20:23:17,140 root INFO -- returning json: {"tables": ["ua.campaign_level"]}
20:23:17,140 root INFO running loop
20:23:17,140 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT * \nFROM ml.D1_D7\nUNION ALL \nSELECT * \nFROM ml.D2_D7\nUNION ALL \nSELECT * \nFROM ml.D3_D7\nUNION ALL \nSELECT * \nFROM ml.D1_D30\nUNION ALL \nSELECT * \nFROM ml.D2_D30\nUNION ALL \nSELECT * \nFROM ml.D3_D30\nUNION ALL \nSELECT * \nFROM ml.D7_D30\nUNION ALL \nSELECT * \nFROM ml.D14_D30\nUNION ALL \nSELECT * \nFROM ml.D1_D60\nUNION ALL \nSELECT * \nFROM ml.D2_D60\nUNION ALL \nSELECT * \nFROM ml.D3_D60\nUNION ALL \nSELECT * \nFROM ml.D7_D60\nUNION ALL \nSELECT * \nFROM ml.D14_D60\nUNION ALL \nSELECT * \nFROM ml.D30_D60\nUNION ALL \nSELECT * \nFROM ml.D1_D7_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D2_D7_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D3_D7_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D1_D30_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D2_D30_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D3_D30_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D1_D60_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D2_D60_ORGANICS\nUNION ALL \nSELECT * \nFROM ml.D3_D60_ORGANICS"}}

20:23:17,140 root INFO got get-tables command
20:23:17,141 root INFO -- returning json: {"tables": ["ml.D2_D60", "ml.D2_D30_ORGANICS", "ml.D2_D60_ORGANICS", "ml.D3_D60_ORGANICS", "ml.D3_D7_ORGANICS", "ml.D1_D60_ORGANICS", "ml.D1_D7_ORGANICS", "ml.D2_D7", "ml.D1_D60", "ml.D1_D7", "ml.D3_D60", "ml.D1_D30", "ml.D7_D30", "ml.D14_D60", "ml.D30_D60", "ml.D3_D30_ORGANICS", "ml.D7_D60", "ml.D2_D7_ORGANICS", "ml.D1_D30_ORGANICS", "ml.D14_D30", "ml.D3_D7", "ml.D2_D30", "ml.D3_D30"]}
20:23:17,141 root INFO running loop
20:23:17,142 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT \n   campaign_name,\n   country,\n   MIN(CONVERSION_DATE) AS start_date\nFROM ua.campaign_level\nJOIN ua.campaign_id USING (campaign_id)\nGROUP BY 1,2;"}}

20:23:17,142 root INFO got get-tables command
20:23:17,142 root INFO -- returning json: {"tables": ["ua.campaign_id", "ua.campaign_level"]}
20:23:17,142 root INFO running loop
20:23:17,143 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH targets AS (\n  SELECT\n    conversion_date,\n    campaign_id,\n    COALESCE(IAPREV_1D_NET, 0) + COALESCE(ADREV_1D, 0) AS totalrev_1d_net,\n    COALESCE(IAPREV_7D_NET, 0) + COALESCE(ADREV_7D, 0) AS totalrev_7d_net,\n    COALESCE(IAPREV_30D_NET, 0) + COALESCE(ADREV_30D, 0) AS totalrev_30d_net,\n    COALESCE(IAPREV_60D_NET, 0) + COALESCE(ADREV_60D, 0) AS totalrev_60d_net,\n    COALESCE(IAPREV_90D_NET, 0) + COALESCE(ADREV_90D, 0) AS totalrev_90d_net\n  FROM ua.campaign_level\n)\nSELECT\n  conversion_date,\n  campaign_id,\n  IAPREV_1D_NET::DOUBLE AS IAPREV_1D_NET,\n  IAPREV_2D_NET::DOUBLE AS IAPREV_2D_NET,\n  IAPREV_3D_NET::DOUBLE AS IAPREV_3D_NET,\n  ADREV_1D::DOUBLE AS ADREV_1D,\n  ADREV_2D::DOUBLE AS ADREV_2D,\n  ADREV_3D::DOUBLE AS ADREV_3D,\n  installs::INT AS installs,\n  RETAINED_USERS_1D::INT AS RETAINED_USERS_1D,\n  RETAINED_USERS_2D::INT AS RETAINED_USERS_2D,\n  RETAINED_USERS_3D::INT AS RETAINED_USERS_3D,\n  RETAINED_USERS_7D::INT AS RETAINED_USERS_7D,\n  RETAINED_USERS_14D::INT AS RETAINED_USERS_14D,\n  cost_pred::DOUBLE as cost_pred,\n  IAPREV_30D_actual::DOUBLE AS IAPREV_30D_actual,\n  IAPREV_14D_actual::DOUBLE AS IAPREV_14D_actual,\n  IAPREV_7D_actual::DOUBLE AS IAPREV_7D_actual,\n  IAPREV_3D_actual::DOUBLE AS IAPREV_3D_actual,\n  IAPREV_2D_actual::DOUBLE AS IAPREV_2D_actual,\n  ADREV_30D_actual::DOUBLE AS ADREV_30D_actual,\n  ADREV_14D_actual::DOUBLE AS ADREV_14D_actual,\n  ADREV_7D_actual::DOUBLE AS ADREV_7D_actual,\n  ADREV_3D_actual::DOUBLE AS ADREV_3D_actual,\n  ADREV_2D_actual::DOUBLE AS ADREV_2D_actual,\n  IAPREV_1D_NET_ROLLING::DOUBLE AS IAPREV_1D_NET_ROLLING,\n  ADREV_1D_ROLLING::DOUBLE AS ADREV_1D_ROLLING,\n  IAPREV_2D_NET_ROLLING::DOUBLE AS IAPREV_2D_NET_ROLLING,\n  ADREV_2D_ROLLING::DOUBLE AS ADREV_2D_ROLLING,\n  IAPREV_3D_NET_ROLLING::DOUBLE AS IAPREV_3D_NET_ROLLING,\n  ADREV_3D_ROLLING::DOUBLE AS ADREV_3D_ROLLING,\n  IAPREV_1D_NET_LAGGED_7D::DOUBLE AS IAPREV_1D_NET_LAGGED_7D,\n  IAPREV_1D_NET_LAGGED_30D::DOUBLE AS IAPREV_1D_NET_LAGGED_30D,\n  ADREV_1D_LAGGED_7D::DOUBLE AS ADREV_1D_LAGGED_7D,\n  ADREV_1D_LAGGED_30D::DOUBLE AS ADREV_1D_LAGGED_30D,\n  IAPREV_2D_NET_LAGGED_7D::DOUBLE AS IAPREV_2D_NET_LAGGED_7D,\n  IAPREV_2D_NET_LAGGED_30D::DOUBLE AS IAPREV_2D_NET_LAGGED_30D,\n  ADREV_2D_LAGGED_7D::DOUBLE AS ADREV_2D_LAGGED_7D,\n  ADREV_2D_LAGGED_30D::DOUBLE AS ADREV_2D_LAGGED_30D,\n  IAPREV_3D_NET_LAGGED_7D::DOUBLE AS IAPREV_3D_NET_LAGGED_7D,\n  IAPREV_3D_NET_LAGGED_30D::DOUBLE AS IAPREV_3D_NET_LAGGED_30D,\n  ADREV_3D_LAGGED_7D::DOUBLE AS ADREV_3D_LAGGED_7D,\n  ADREV_3D_LAGGED_30D::DOUBLE AS ADREV_3D_LAGGED_30D,\n  spend_per_campaign::DOUBLE AS spend_per_campaign,\n  installs_per_campaign::INT AS installs_per_campaign,\n  spend_per_country::DOUBLE as spend_per_country,\n  installs_per_country::INT AS installs_per_country,\n  rolling_installs::DOUBLE as rolling_installs,\n  rolling_spend::DOUBLE as rolling_spend,\n  relative_spend_per_campaign::DOUBLE as relative_spend_per_campaign,\n  relative_installs_per_campaign::DOUBLE AS relative_installs_per_campaign,\n  relative_spend_per_country::DOUBLE as relative_spend_per_country,\n  relative_installs_per_country::DOUBLE AS relative_installs_per_country,\n  cpi::DOUBLE as cpi,\n  retention_rate_1d::DOUBLE as retention_rate_1d,\n  retention_rate_2d::DOUBLE as retention_rate_2d,\n  retention_rate_3d::DOUBLE AS retention_rate_3d,\n  retention_rate_7d::DOUBLE AS retention_rate_7d,\n  retention_rate_14d::DOUBLE AS retention_rate_14d,\n  other_ohe,\n  cpi_ohe,\n  cpa_ohe,\n  ad_ohe,\n  bld_ohe,\n  iap_ohe,\n  c_type.d7_conversion_window,\n  eatventure_ohe,\n  waw_ohe,\n  pocketchess_ohe,\n  ios_ohe,\n  android_ohe,\n  totalrev_1d_net::DOUBLE AS TOTALREV_1d_net,\n  totalrev_7d_net::DOUBLE AS TOTALREV_7d_net,\n  totalrev_30d_net::DOUBLE AS TOTALREV_30d_net,\n  totalrev_60d_net::DOUBLE AS TOTALREV_60d_net,\n  totalrev_90d_net::DOUBLE AS TOTALREV_90d_net,\n  v.tier,\n  days_since_2022,\n  sample_weight \nFROM features.feature_store\nJOIN ua.campaign_id c_id USING (campaign_id)\nJOIN targets USING (campaign_id, conversion_date)\nJOIN features.campaign_type c_type USING (campaign_id)\nLEFT JOIN training.campaign_starts c_st ON (c_id.campaign_name = c_st.campaign_name AND c_id.country = c_st.country)\nLEFT JOIN core.main.vat v ON c_id.COUNTRY = ALPHA_2_CODE\nWHERE platform IN ('ios', 'android')\n  AND cost_pred \u003e 20\n  AND installs \u003e 50\n  AND totalrev_1d_net \u003e 0\n  AND totalrev_7d_net \u003e 5\n  AND CAMPAIGN_TYPE IN ('bld', 'cpa', 'cpi', 'ad', 'iap', 'other')\n  AND campaign_status IN ('Discovery', 'Performance', 'Global Launch')\n  AND simplenetworknames NOT IN ('Other',\n    'Apple',\n    'DigitalTurbine',\n    'Vungle',\n    'Snapchat',\n    'Unity',\n    'Liftoff',\n    'Ironsource')\n  AND NOT (simplenetworknames IN ('Facebook', 'Google', 'Tiktok') AND platform = 'ios')\n  AND app IN ('Eatventure', 'We are Warriors!')\n  AND DATEDIFF('day', start_date, conversion_date) \u003e= 9;"}}

20:23:17,143 root INFO got get-tables command
20:23:17,148 root INFO -- returning json: {"tables": ["training.campaign_starts", "features.campaign_type", "core.main.vat", "ua.campaign_id", "features.feature_store", "ua.campaign_level"]}
20:23:17,148 root INFO running loop
20:23:17,148 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH targets AS (\n  SELECT\n    conversion_date,\n    campaign_id,\n    COALESCE(IAPREV_1D_NET, 0) + COALESCE(ADREV_1D, 0) AS totalrev_1d_net,\n    COALESCE(IAPREV_7D_NET, 0) + COALESCE(ADREV_7D, 0) AS totalrev_7d_net,\n    COALESCE(IAPREV_30D_NET, 0) + COALESCE(ADREV_30D, 0) AS totalrev_30d_net,\n    COALESCE(IAPREV_60D_NET, 0) + COALESCE(ADREV_60D, 0) AS totalrev_60d_net,\n    COALESCE(IAPREV_90D_NET, 0) + COALESCE(ADREV_90D, 0) AS totalrev_90d_net\n  FROM ua.campaign_level\n)\nSELECT\n  conversion_date,\n  campaign_id,\n  IAPREV_1D_NET::DOUBLE AS IAPREV_1D_NET,\n  IAPREV_2D_NET::DOUBLE AS IAPREV_2D_NET,\n  IAPREV_3D_NET::DOUBLE AS IAPREV_3D_NET,\n  ADREV_1D::DOUBLE AS ADREV_1D,\n  ADREV_2D::DOUBLE AS ADREV_2D,\n  ADREV_3D::DOUBLE AS ADREV_3D,\n  installs::INT AS installs,\n  RETAINED_USERS_1D::INT AS RETAINED_USERS_1D,\n  RETAINED_USERS_2D::INT AS RETAINED_USERS_2D,\n  RETAINED_USERS_3D::INT AS RETAINED_USERS_3D,\n  RETAINED_USERS_7D::INT AS RETAINED_USERS_7D,\n  RETAINED_USERS_14D::INT AS RETAINED_USERS_14D,\n  IAPREV_30D_actual::DOUBLE AS IAPREV_30D_actual,\n  IAPREV_14D_actual::DOUBLE AS IAPREV_14D_actual,\n  IAPREV_7D_actual::DOUBLE AS IAPREV_7D_actual,\n  IAPREV_3D_actual::DOUBLE AS IAPREV_3D_actual,\n  IAPREV_2D_actual::DOUBLE AS IAPREV_2D_actual,\n  ADREV_30D_actual::DOUBLE AS ADREV_30D_actual,\n  ADREV_14D_actual::DOUBLE AS ADREV_14D_actual,\n  ADREV_7D_actual::DOUBLE AS ADREV_7D_actual,\n  ADREV_3D_actual::DOUBLE AS ADREV_3D_actual,\n  ADREV_2D_actual::DOUBLE AS ADREV_2D_actual,\n  IAPREV_1D_NET_ROLLING::DOUBLE AS IAPREV_1D_NET_ROLLING,\n  ADREV_1D_ROLLING::DOUBLE AS ADREV_1D_ROLLING,\n  IAPREV_2D_NET_ROLLING::DOUBLE AS IAPREV_2D_NET_ROLLING,\n  ADREV_2D_ROLLING::DOUBLE AS ADREV_2D_ROLLING,\n  IAPREV_3D_NET_ROLLING::DOUBLE AS IAPREV_3D_NET_ROLLING,\n  ADREV_3D_ROLLING::DOUBLE AS ADREV_3D_ROLLING,\n  IAPREV_1D_NET_LAGGED_7D::DOUBLE AS IAPREV_1D_NET_LAGGED_7D,\n  IAPREV_1D_NET_LAGGED_30D::DOUBLE AS IAPREV_1D_NET_LAGGED_30D,\n  ADREV_1D_LAGGED_7D::DOUBLE AS ADREV_1D_LAGGED_7D,\n  ADREV_1D_LAGGED_30D::DOUBLE AS ADREV_1D_LAGGED_30D,\n  IAPREV_2D_NET_LAGGED_7D::DOUBLE AS IAPREV_2D_NET_LAGGED_7D,\n  IAPREV_2D_NET_LAGGED_30D::DOUBLE AS IAPREV_2D_NET_LAGGED_30D,\n  ADREV_2D_LAGGED_7D::DOUBLE AS ADREV_2D_LAGGED_7D,\n  ADREV_2D_LAGGED_30D::DOUBLE AS ADREV_2D_LAGGED_30D,\n  IAPREV_3D_NET_LAGGED_7D::DOUBLE AS IAPREV_3D_NET_LAGGED_7D,\n  IAPREV_3D_NET_LAGGED_30D::DOUBLE AS IAPREV_3D_NET_LAGGED_30D,\n  ADREV_3D_LAGGED_7D::DOUBLE AS ADREV_3D_LAGGED_7D,\n  ADREV_3D_LAGGED_30D::DOUBLE AS ADREV_3D_LAGGED_30D,\n  installs_per_country::INT AS installs_per_country,\n  rolling_installs::DOUBLE as rolling_installs,\n  relative_installs_per_country::DOUBLE AS relative_installs_per_country,\n  retention_rate_1d::DOUBLE as retention_rate_1d,\n  retention_rate_2d::DOUBLE as retention_rate_2d,\n  retention_rate_3d::DOUBLE AS retention_rate_3d,\n  retention_rate_7d::DOUBLE AS retention_rate_7d,\n  retention_rate_14d::DOUBLE AS retention_rate_14d,\n  eatventure_ohe,\n  waw_ohe,\n  pocketchess_ohe,\n  ios_ohe,\n  android_ohe,\n  totalrev_1d_net::DOUBLE AS TOTALREV_1d_net,\n  totalrev_7d_net::DOUBLE AS TOTALREV_7d_net,\n  totalrev_30d_net::DOUBLE AS TOTALREV_30d_net,\n  totalrev_60d_net::DOUBLE AS TOTALREV_60d_net,\n  totalrev_90d_net::DOUBLE AS TOTALREV_90d_net,\n  v.tier,\n  days_since_2022,\n  sample_weight \nFROM features.feature_store\nJOIN ua.campaign_id c_id USING (campaign_id)\nJOIN targets USING (campaign_id, conversion_date)\nLEFT JOIN training.campaign_starts c_st ON (c_id.campaign_name = c_st.campaign_name AND c_id.country = c_st.country)\nLEFT JOIN core.main.vat v ON c_id.COUNTRY = ALPHA_2_CODE\nWHERE platform IN ('ios', 'android')\n  AND totalrev_1d_net \u003e 0\n  AND totalrev_7d_net \u003e 5\n  AND installs \u003e 25\n  AND simplenetworknames = 'Other'\n  AND app IN ('Eatventure', 'We are Warriors!')\n  AND DATEDIFF('day', start_date, CURRENT_DATE) \u003e= 12;"}}

20:23:17,148 root INFO got get-tables command
20:23:17,152 root INFO -- returning json: {"tables": ["training.campaign_starts", "core.main.vat", "ua.campaign_id", "features.feature_store", "ua.campaign_level"]}
20:23:17,152 root INFO running loop
20:23:17,152 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH t1 AS(\nSELECT DISTINCT\n  app,\n  platform,\n  simplenetworknames,\n  campaign_name,\n  country\nFROM ua_data.cohorts.creative_id\nJOIN ua_data.cohorts.cohort_id USING (campaign_creative_id)\n)\nSELECT\n  app,\n  platform,\n  simplenetworknames,\n  campaign_name,\n  country,\n  HASH(app, platform, simplenetworknames, campaign_name, country) AS campaign_id\nFROM t1;"}}

20:23:17,152 root INFO got get-tables command
20:23:17,152 root INFO -- returning json: {"tables": ["ua_data.cohorts.cohort_id", "ua_data.cohorts.creative_id"]}
20:23:17,153 root INFO running loop
20:23:17,153 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nSELECT\n    conversion_date,\n    campaign_id,\n    \n    SUM(ADREV_1D) AS ADREV_1D,\n    SUM(IAPREV_1D) AS IAPREV_1D,\n    SUM(IAPREV_1D_NET) AS IAPREV_1D_NET,\n    SUM(RETAINED_USERS_1D) AS RETAINED_USERS_1D,\n    \n    SUM(ADREV_2D) AS ADREV_2D,\n    SUM(IAPREV_2D) AS IAPREV_2D,\n    SUM(IAPREV_2D_NET) AS IAPREV_2D_NET,\n    SUM(RETAINED_USERS_2D) AS RETAINED_USERS_2D,\n    \n    SUM(ADREV_3D) AS ADREV_3D,\n    SUM(IAPREV_3D) AS IAPREV_3D,\n    SUM(IAPREV_3D_NET) AS IAPREV_3D_NET,\n    SUM(RETAINED_USERS_3D) AS RETAINED_USERS_3D,\n    \n    SUM(ADREV_7D) AS ADREV_7D,\n    SUM(IAPREV_7D) AS IAPREV_7D,\n    SUM(IAPREV_7D_NET) AS IAPREV_7D_NET,\n    SUM(RETAINED_USERS_7D) AS RETAINED_USERS_7D,\n    \n    SUM(ADREV_14D) AS ADREV_14D,\n    SUM(IAPREV_14D) AS IAPREV_14D,\n    SUM(IAPREV_14D_NET) AS IAPREV_14D_NET,\n    SUM(RETAINED_USERS_14D) AS RETAINED_USERS_14D,\n    \n    SUM(ADREV_30D) AS ADREV_30D,\n    SUM(IAPREV_30D) AS IAPREV_30D,\n    SUM(IAPREV_30D_NET) AS IAPREV_30D_NET,\n    SUM(RETAINED_USERS_30D) AS RETAINED_USERS_30D,\n    \n    SUM(ADREV_60D) AS ADREV_60D,\n    SUM(IAPREV_60D) AS IAPREV_60D,\n    SUM(IAPREV_60D_NET) AS IAPREV_60D_NET,\n    SUM(RETAINED_USERS_60D) AS RETAINED_USERS_60D,\n    \n    SUM(ADREV_90D) AS ADREV_90D,\n    SUM(IAPREV_90D) AS IAPREV_90D,\n    SUM(IAPREV_90D_NET) AS IAPREV_90D_NET,\n    SUM(RETAINED_USERS_90D) AS RETAINED_USERS_90D,\n    \n    SUM(ADREV_ACTUAL) AS ADREV_ACTUAL,\n    SUM(IAPREV_ACTUAL) AS IAPREV_ACTUAL,\n    SUM(IAPREV_ACTUAL_NET) AS IAPREV_ACTUAL_NET,\n    SUM(profit_actual) AS profit_actual,\n    SUM(DAU) AS DAU,\n    SUM(IMPRESSIONS) AS IMPRESSIONS,\n    SUM(CLICKS) AS CLICKS,\n    SUM(installs) AS installs,\n    SUM(COST) AS COST,\n    SUM(PROBABILISTIC_COST) AS PROBABILISTIC_COST\nFROM ua_data.ua.ua_data\nINNER JOIN ua_data.cohorts.cohort_id USING (cohort_id)\nINNER JOIN ua_data.cohorts.creative_id USING (campaign_creative_id)\nJOIN ua.campaign_id USING (COUNTRY,\n    APP,\n    PLATFORM,\n    SIMPLENETWORKNAMES,\n    CAMPAIGN_NAME)\nGROUP BY 1,2;"}}

20:23:17,153 root INFO got get-tables command
20:23:17,156 root INFO -- returning json: {"tables": ["ua.campaign_id", "ua_data.cohorts.cohort_id", "ua_data.cohorts.creative_id", "ua_data.ua.ua_data"]}
20:23:17,156 root INFO running loop
20:23:17,156 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH campaign_level_purchases AS (\nSELECT\n    CONVERT_TIMEZONE('CET',install_ts)::DATE AS conversion_date,\n    app,\n    platform,\n    simplenetworknames,\n    campaign_name,\n    country,\n    COUNT(DISTINCT install_id) AS NUMBER_OF_PURCHASERS,\n    COUNT(DISTINCT CASE WHEN user_age_in_days \u003c= 0 THEN install_id END) AS purchasers_1D,\n    COUNT(DISTINCT CASE WHEN user_age_in_days \u003c= 2 THEN install_id END) AS purchasers_3D,\n    COUNT(DISTINCT CASE WHEN user_age_in_days \u003c= 6 THEN install_id END) AS purchasers_7D,\n    SUM(number_of_iaps) AS number_of_iaps,\n    SUM(CASE WHEN user_age_in_days \u003c= 0 THEN number_of_iaps ELSE 0 END) AS number_of_iaps_1D,\n    SUM(CASE WHEN user_age_in_days \u003c= 2 THEN number_of_iaps ELSE 0 END) AS number_of_iaps_3D,\n    SUM(CASE WHEN user_age_in_days \u003c= 6 THEN number_of_iaps ELSE 0 END) AS number_of_iaps_7D\nFROM ua_data.user.user_aggregates\nJOIN ua_data.user.users USING (install_id)\nWHERE REVENUE_IAP \u003e 0 AND conversion_date BETWEEN '2024-07-16'::DATE - 8 AND '2024-07-16'\nGROUP BY 1,2,3,4,5,6\n)\nSELECT  \n  conversion_date,\n  campaign_id,\n  number_of_purchasers,\n  purchasers_1D,\n  purchasers_3D,\n  purchasers_7D,\n  number_of_iaps,\n  number_of_iaps_1D,\n  number_of_iaps_3D,\n  number_of_iaps_7D\nFROM campaign_level_purchases\nJOIN ua.campaign_id USING (app, platform, simplenetworknames, campaign_name, country)"}}

20:23:17,156 root INFO got get-tables command
20:23:17,157 root INFO -- returning json: {"tables": ["ua.campaign_id", "ua_data.user.users", "ua_data.user.user_aggregates"]}
20:23:17,157 root INFO running loop
20:23:17,158 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    CONVERT_TIMEZONE('CET', users.install_ts)::DATE AS conversion_date,\n    users.cohort_id,\n    agg.revenue_date,\n    agg.user_age_in_days,\n    SUM(agg.revenue_ad) AS revenue_ad,\n    SUM(agg.revenue_iap) AS revenue_iap,\n    SUM(agg.fee_iap) AS fee_iap,\n    SUM(agg.vat_amount) AS vat_amount\nFROM user.user_aggregates AS agg\nINNER JOIN user.users AS users USING (install_id)\nWHERE agg.revenue_date BETWEEN '2024-07-16' AND '2024-07-16'\nGROUP BY 1, 2, 3, 4"}}

20:23:17,158 root INFO got get-tables command
20:23:17,158 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,158 root INFO running loop
20:23:17,158 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT DISTINCT\n    country,\n    campaign_creative_id,\n    cohort_id\nFROM singular.clean_cc\nUNION\nSELECT DISTINCT\n    country,\n    campaign_creative_id,\n    cohort_id\nFROM singular.costs_updated_names\nUNION\nSELECT DISTINCT\n    country,\n    campaign_creative_id,\n    cohort_id\nFROM user.users"}}

20:23:17,158 root INFO got get-tables command
20:23:17,159 root INFO -- returning json: {"tables": ["user.users", "singular.costs_updated_names", "singular.clean_cc"]}
20:23:17,159 root INFO running loop
20:23:17,161 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nWITH\ncohort_metric_revenue AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        \n            SUM(IFF(user_age_in_days \u003c 1, revenue_ad, 0)) AS ADREV_1D,\n            SUM(IFF(user_age_in_days \u003c 1, revenue_iap, 0)) AS IAPREV_1D,\n            SUM(IFF(user_age_in_days \u003c 1, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_1D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 2, revenue_ad, 0)) AS ADREV_2D,\n            SUM(IFF(user_age_in_days \u003c 2, revenue_iap, 0)) AS IAPREV_2D,\n            SUM(IFF(user_age_in_days \u003c 2, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_2D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 3, revenue_ad, 0)) AS ADREV_3D,\n            SUM(IFF(user_age_in_days \u003c 3, revenue_iap, 0)) AS IAPREV_3D,\n            SUM(IFF(user_age_in_days \u003c 3, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_3D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 7, revenue_ad, 0)) AS ADREV_7D,\n            SUM(IFF(user_age_in_days \u003c 7, revenue_iap, 0)) AS IAPREV_7D,\n            SUM(IFF(user_age_in_days \u003c 7, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_7D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 14, revenue_ad, 0)) AS ADREV_14D,\n            SUM(IFF(user_age_in_days \u003c 14, revenue_iap, 0)) AS IAPREV_14D,\n            SUM(IFF(user_age_in_days \u003c 14, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_14D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 30, revenue_ad, 0)) AS ADREV_30D,\n            SUM(IFF(user_age_in_days \u003c 30, revenue_iap, 0)) AS IAPREV_30D,\n            SUM(IFF(user_age_in_days \u003c 30, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_30D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 60, revenue_ad, 0)) AS ADREV_60D,\n            SUM(IFF(user_age_in_days \u003c 60, revenue_iap, 0)) AS IAPREV_60D,\n            SUM(IFF(user_age_in_days \u003c 60, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_60D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 90, revenue_ad, 0)) AS ADREV_90D,\n            SUM(IFF(user_age_in_days \u003c 90, revenue_iap, 0)) AS IAPREV_90D,\n            SUM(IFF(user_age_in_days \u003c 90, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_90D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 180, revenue_ad, 0)) AS ADREV_180D,\n            SUM(IFF(user_age_in_days \u003c 180, revenue_iap, 0)) AS IAPREV_180D,\n            SUM(IFF(user_age_in_days \u003c 180, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_180D_NET,\n        \n            SUM(IFF(user_age_in_days \u003c 360, revenue_ad, 0)) AS ADREV_360D,\n            SUM(IFF(user_age_in_days \u003c 360, revenue_iap, 0)) AS IAPREV_360D,\n            SUM(IFF(user_age_in_days \u003c 360, (revenue_iap - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)), 0))\n                AS IAPREV_360D_NET,\n        \n    FROM cohorts.cohort_aggregates\n    GROUP BY 1, 2\n),\n\ncohort_metric_retention AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        \n            MAX(IFF(user_age_in_days = 1, retained_users, 0)) AS RETAINED_USERS_1D,\n        \n            MAX(IFF(user_age_in_days = 2, retained_users, 0)) AS RETAINED_USERS_2D,\n        \n            MAX(IFF(user_age_in_days = 3, retained_users, 0)) AS RETAINED_USERS_3D,\n        \n            MAX(IFF(user_age_in_days = 7, retained_users, 0)) AS RETAINED_USERS_7D,\n        \n            MAX(IFF(user_age_in_days = 14, retained_users, 0)) AS RETAINED_USERS_14D,\n        \n            MAX(IFF(user_age_in_days = 30, retained_users, 0)) AS RETAINED_USERS_30D,\n        \n            MAX(IFF(user_age_in_days = 60, retained_users, 0)) AS RETAINED_USERS_60D,\n        \n            MAX(IFF(user_age_in_days = 90, retained_users, 0)) AS RETAINED_USERS_90D,\n        \n            MAX(IFF(user_age_in_days = 180, retained_users, 0)) AS RETAINED_USERS_180D,\n        \n            MAX(IFF(user_age_in_days = 360, retained_users, 0)) AS RETAINED_USERS_360D,\n        \n    FROM cohorts.retention\n    GROUP BY 1, 2\n)\n\nSELECT\n    conversion_date,\n    cohort_id,\n    \n        cmr.ADREV_1D,\n        cmr.IAPREV_1D,\n        cmr.IAPREV_1D_NET,\n        cmrt.RETAINED_USERS_1D,\n    \n        cmr.ADREV_2D,\n        cmr.IAPREV_2D,\n        cmr.IAPREV_2D_NET,\n        cmrt.RETAINED_USERS_2D,\n    \n        cmr.ADREV_3D,\n        cmr.IAPREV_3D,\n        cmr.IAPREV_3D_NET,\n        cmrt.RETAINED_USERS_3D,\n    \n        cmr.ADREV_7D,\n        cmr.IAPREV_7D,\n        cmr.IAPREV_7D_NET,\n        cmrt.RETAINED_USERS_7D,\n    \n        cmr.ADREV_14D,\n        cmr.IAPREV_14D,\n        cmr.IAPREV_14D_NET,\n        cmrt.RETAINED_USERS_14D,\n    \n        cmr.ADREV_30D,\n        cmr.IAPREV_30D,\n        cmr.IAPREV_30D_NET,\n        cmrt.RETAINED_USERS_30D,\n    \n        cmr.ADREV_60D,\n        cmr.IAPREV_60D,\n        cmr.IAPREV_60D_NET,\n        cmrt.RETAINED_USERS_60D,\n    \n        cmr.ADREV_90D,\n        cmr.IAPREV_90D,\n        cmr.IAPREV_90D_NET,\n        cmrt.RETAINED_USERS_90D,\n    \n        cmr.ADREV_180D,\n        cmr.IAPREV_180D,\n        cmr.IAPREV_180D_NET,\n        cmrt.RETAINED_USERS_180D,\n    \n        cmr.ADREV_360D,\n        cmr.IAPREV_360D,\n        cmr.IAPREV_360D_NET,\n        cmrt.RETAINED_USERS_360D,\n    \nFROM cohort_metric_revenue AS cmr\nINNER JOIN cohort_metric_retention AS cmrt USING (conversion_date, cohort_id)"}}

20:23:17,161 root INFO got get-tables command
20:23:17,169 root INFO -- returning json: {"tables": ["cohorts.retention", "cohorts.cohort_aggregates"]}
20:23:17,169 root INFO running loop
20:23:17,170 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH creative_names AS (\n    SELECT DISTINCT\n        creative_name,\n        campaign_creative_id,\n        app\n    FROM cohorts.creative_id\n),\n\ncreative_id_regex AS (\n    SELECT\n        creative_name,\n        campaign_creative_id,\n        app,\n        COALESCE(\n            REGEXP_SUBSTR(creative_name, 'TTCC_[0-9]{1,4}'),\n            REGEXP_SUBSTR(creative_name, 'ID([0-9]{1,4})', 1, 1, 'e'),\n            REGEXP_SUBSTR(creative_name, 'Creative([0-9]{1,4})', 1, 1, 'e'),\n            REGEXP_SUBSTR(creative_name, '^([0-9]{1,3})[_[:space:]]', 1, 1, 'e'),\n            REGEXP_SUBSTR(creative_name, '^([0-9]{1,3})[:space:]', 1, 1, 'e'),\n            IFF(\n                NOT REGEXP_LIKE(creative_name, '[0-9]{2,4}x[0-9]{2,4}|[0-9]{4}-[0-9]{2}-[0-9]{2}'),\n                REGEXP_SUBSTR(creative_name, '([0-9]{1,3})($|[:space:])', 1, 1, 'e'),\n                null\n            ),\n            REGEXP_SUBSTR(creative_name, '^([0-9]{1,3})$', 1, 1, 'e')\n        ) AS id,\n        COALESCE(\n            REGEXP_SUBSTR(creative_name, 'var([0-9]{1,2})', 1, 1, 'ie'),\n            REGEXP_SUBSTR(creative_name, 'v([0-9]{1,2})', 1, 1, 'ie')\n        ) AS var\n    FROM creative_names\n),\n\ncreative_id AS (\n    SELECT\n        campaign_creative_id,\n        creative_name,\n        app,\n        CASE\n            WHEN LOWER(TRIM(id)) LIKE '%ttcc%' THEN LPAD(SPLIT(TRIM(id), '_')[1]::NUMBER, 4, 0)\n        END AS ttcc_id,\n        CASE\n            WHEN LEN(TRIM(id)) \u003c 4 THEN CONCAT('ID', LPAD(TRIM(id), 4, '0'))\n            WHEN LOWER(id) LIKE '%ttcc%' THEN null\n            ELSE CONCAT('ID', TRIM(id))\n        END AS id_test,\n        LPAD(TRIM(var), 2, '0') AS var\n    FROM creative_id_regex\n)\n\nSELECT\n    c_id.campaign_creative_id,\n    c_id.creative_name,\n    c_id.id_test AS id,\n    c_id.var,\n    c_id.ttcc_id,\n    sheet.date AS production_date,\n    sheet.produced_by,\n    sheet.status,\n    sheet.test_platform,\n    sheet.test_winner,\n    sheet.resized,\n    sheet.idea,\n    sheet.test_winner2,\n    sheet.week_num,\n    sheet.upload\nFROM creative_id AS c_id\nLEFT JOIN\n    cohorts.creative_sheet AS sheet\n    ON c_id.app = sheet.app AND c_id.id_test = sheet.concept AND c_id.var = sheet.var"}}

20:23:17,170 root INFO got get-tables command
20:23:17,173 root INFO -- returning json: {"tables": ["cohorts.creative_sheet", "cohorts.creative_id"]}
20:23:17,173 root INFO running loop
20:23:17,174 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH union_table AS (\n    SELECT DISTINCT\n        app,\n        platform,\n        simplenetworknames,\n        campaign_name,\n        sub_campaign_name,\n        creative_name,\n        campaign_creative_id\n    FROM singular.clean_cc\n    UNION\n    SELECT DISTINCT\n        app,\n        platform,\n        simplenetworknames,\n        campaign_name,\n        sub_campaign_name,\n        creative_name,\n        campaign_creative_id\n    FROM singular.costs_updated_names\n    UNION\n    SELECT DISTINCT\n        app,\n        platform,\n        simplenetworknames,\n        campaign_name,\n        sub_campaign_name,\n        creative_name,\n        campaign_creative_id\n    FROM user.users\n)\n\nSELECT\n    cte.app,\n    cte.platform,\n    cte.simplenetworknames,\n    cte.sub_campaign_name,\n    cte.creative_name,\n    cte.campaign_creative_id,\n    COALESCE(camp_rename.new_name, cte.campaign_name) AS campaign_name\nFROM union_table AS cte\nLEFT JOIN core.main.campaign_renaming AS camp_rename\n    ON cte.campaign_name = camp_rename.deprecated_name"}}

20:23:17,174 root INFO got get-tables command
20:23:17,175 root INFO -- returning json: {"tables": ["core.main.campaign_renaming", "user.users", "singular.costs_updated_names", "singular.clean_cc"]}
20:23:17,175 root INFO running loop
20:23:17,175 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    users.cohort_id,\n    agg.revenue_date,\n    COUNT(DISTINCT install_id) AS active_users\nFROM user.user_aggregates AS agg\nINNER JOIN user.users AS users USING (install_id)\nWHERE agg.revenue_date BETWEEN '2024-07-16' AND '2024-07-16'\nGROUP BY 1, 2;"}}

20:23:17,175 root INFO got get-tables command
20:23:17,175 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,175 root INFO running loop
20:23:17,175 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    CONVERT_TIMEZONE('CET', install_ts)::DATE AS conversion_date,\n    cohort_id,\n    COUNT(install_id) AS installs\nFROM user.users\nWHERE conversion_date BETWEEN '2024-07-16' AND '2024-07-16'\nGROUP BY 1, 2;"}}

20:23:17,175 root INFO got get-tables command
20:23:17,176 root INFO -- returning json: {"tables": ["user.users"]}
20:23:17,176 root INFO running loop
20:23:17,176 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    CONVERT_TIMEZONE('CET', users.install_ts)::DATE AS conversion_date,\n    users.cohort_id,\n    agg.user_age_in_days,\n    conversion_date + agg.user_age_in_days AS actual_date,\n    COUNT(DISTINCT agg.install_id) AS retained_users\nFROM user.user_aggregates AS agg\nINNER JOIN user.users AS users USING (install_id)\nWHERE actual_date BETWEEN '2024-07-16'::DATE - 1 AND '2024-07-16'\nGROUP BY 1, 2, 3, 4"}}

20:23:17,176 root INFO got get-tables command
20:23:17,176 root INFO -- returning json: {"tables": ["user.user_aggregates", "user.users"]}
20:23:17,176 root INFO running loop
20:23:17,176 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    cost.date AS conversion_date,\n    apps.app,\n    CASE\n        WHEN cost.os = 'iOS' THEN 'ios'\n        WHEN cost.os = 'Android' THEN 'android'\n    END AS platform,\n    COALESCE(vat.alpha_2_code, 'missing') AS country,\n    COALESCE(vat.tier, 4)::NUMBER(30, 6) AS tier,\n    core.fn.SIMPLE_NETWORK_NAMES(cost.source) AS simplenetworknames,\n    core.fn.clean_creative(cost.asset_name) AS asset_name,\n    SUM(cost.adn_cost)::NUMBER(30, 6) AS cost,\n    SUM(cost.adn_clicks)::NUMBER(30, 6) AS clicks,\n    SUM(cost.adn_impressions)::NUMBER(30, 6) AS impressions,\n    SUM(cost.adn_installs)::NUMBER(30, 6) AS installs\nFROM singular.costs AS cost\nINNER JOIN core.main.apps AS apps\n    ON cost.app = apps.app\nLEFT JOIN core.main.vat AS vat\n    ON cost.country_field = vat.alpha_3_code\nWHERE platform IS NOT null AND NOT (asset_name = 'missing')\nGROUP BY 1, 2, 3, 4, 5, 6, 7"}}

20:23:17,176 root INFO got get-tables command
20:23:17,179 root INFO -- returning json: {"tables": ["singular.costs", "core.main.apps", "core.main.vat"]}
20:23:17,179 root INFO running loop
20:23:17,179 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    etl_record_processing_hour_utc,\n    device_id,\n    idfv,\n    platform,\n    event_timestamp,\n    app_longname,\n    country,\n    partner,\n    campaign_name,\n    sub_campaign_name,\n    creative_name,\n    campaign_id,\n    sub_campaign_id,\n    creative_id,\n    is_reengagement\nFROM singular_database.user.attributions"}}

20:23:17,179 root INFO got get-tables command
20:23:17,180 root INFO -- returning json: {"tables": ["singular_database.user.attributions"]}
20:23:17,180 root INFO running loop
20:23:17,202 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    attr.platform,\n    attr.event_timestamp AS attribution_event_timestamp,\n    apps.app,\n    attr.partner,\n    attr.etl_record_processing_hour_utc,\n    attr.is_reengagement,\n    CASE\n        WHEN attr.platform = 'ios' THEN attr.idfv\n        WHEN attr.platform = 'android' THEN attr.device_id\n    END AS device_id,\n    core.fn.clean_country(attr.country) AS country,\n    core.fn.SIMPLE_NETWORK_NAMES(attr.partner) AS simplenetworknames,\n    core.fn.clean_campaign(attr.campaign_name) AS campaign_name,\n    COALESCE(attr.sub_campaign_name, 'missing') AS sub_campaign_name,\n    core.fn.clean_creative(attr.creative_name) AS creative_name,\n    COALESCE(attr.campaign_id, 'missing') AS campaign_id,\n    COALESCE(attr.sub_campaign_id, 'missing') AS sub_campaign_id,\n    COALESCE(core.fn.clean_creative_id(attr.creative_id), 'missing') AS creative_id\nFROM singular.attributions AS attr\nINNER JOIN core.main.apps AS apps\n    ON attr.app_longname = apps.bundle_id\nWHERE attr.platform IN ('ios', 'android')"}}

20:23:17,202 root INFO got get-tables command
20:23:17,204 root INFO -- returning json: {"tables": ["core.main.apps", "singular.attributions"]}
20:23:17,204 root INFO running loop
20:23:17,219 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH t1 AS (\n    SELECT\n        crea.date AS conversion_date,\n        app,\n        CASE\n            WHEN crea.os = 'Android' THEN 'android'\n            WHEN crea.os = 'iOS' THEN 'ios'\n        END AS platform,\n        COALESCE(vat.alpha_2_code, 'missing') AS country,\n        core.fn.SIMPLE_NETWORK_NAMES(crea.source) AS simplenetworknames,\n        core.fn.clean_campaign(crea.unified_campaign_name) AS campaign_name,\n        COALESCE(crea.sub_campaign_name, 'missing') AS sub_campaign_name,\n        core.fn.CLEAN_CREATIVE(crea.creative_name) AS creative_name,\n        SUM(crea.custom_impressions) AS impressions,\n        SUM(crea.custom_clicks) AS clicks,\n        SUM(crea.custom_installs) AS installs,\n        SUM(crea.adn_cost) AS cost,\n        SUM(crea.probabilistic_cost) AS probabilistic_cost,\n        SUM(crea.revenue_1d) AS iaprev_1d,\n        SUM(crea.revenue_2d) AS iaprev_2d,\n        SUM(crea.revenue_3d) AS iaprev_3d,\n        SUM(crea.revenue_7d) AS iaprev_7d,\n        SUM(crea.revenue_14d) AS iaprev_14d,\n        SUM(crea.revenue_30d) AS iaprev_30d,\n        SUM(crea.revenue_60d) AS iaprev_60d,\n        SUM(crea.revenue_90d) AS iaprev_90d,\n        SUM(crea.revenue_actual) AS iaprev_actual,\n        SUM(crea.retained_users_1d) AS retained_users_1d,\n        SUM(crea.retained_users_2d) AS retained_users_2d,\n        SUM(crea.retained_users_3d) AS retained_users_3d,\n        SUM(crea.retained_users_7d) AS retained_users_7d,\n        SUM(crea.retained_users_14d) AS retained_users_14d,\n        SUM(crea.retained_users_30d) AS retained_users_30d,\n        SUM(crea.retained_users_60d) AS retained_users_60d,\n        SUM(crea.retained_users_90d) AS retained_users_90d,\n        SUM(crea.retained_users_actual) AS retained_users_actual,\n        SUM(crea.ad_revenue_1d) AS adrev_1d,\n        SUM(crea.ad_revenue_2d) AS adrev_2d,\n        SUM(crea.ad_revenue_3d) AS adrev_3d,\n        SUM(crea.ad_revenue_7d) AS adrev_7d,\n        SUM(crea.ad_revenue_14d) AS adrev_14d,\n        SUM(crea.ad_revenue_30d) AS adrev_30d,\n        SUM(crea.ad_revenue_60d) AS adrev_60d,\n        SUM(crea.ad_revenue_90d) AS adrev_90d,\n        SUM(crea.ad_revenue_actual) AS adrev_actual\n    FROM singular.custom_creatives AS crea\n    LEFT JOIN core.main.vat AS vat\n        ON crea.country_field = vat.alpha_3_code\n    INNER JOIN core.main.apps USING (app)\n    WHERE NOT (simplenetworknames != 'Other' AND campaign_name = 'missing') AND platform IS NOT null\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8\n)\n\nSELECT\n    *,\n    HASH(app, platform, simplenetworknames, campaign_name, sub_campaign_name, creative_name) AS campaign_creative_id,\n    HASH(campaign_creative_id, country) AS cohort_id\nFROM t1"}}

20:23:17,220 root INFO got get-tables command
20:23:17,223 root INFO -- returning json: {"tables": ["core.main.vat", "core.main.apps", "singular.custom_creatives"]}
20:23:17,223 root INFO running loop
20:23:17,223 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH t1 AS (\n    SELECT\n        cost.date AS conversion_date,\n        apps.app,\n        CASE\n            WHEN cost.os = 'iOS' THEN 'ios'\n            WHEN cost.os = 'Android' THEN 'android'\n        END AS platform,\n        COALESCE(vat.alpha_2_code, 'missing') AS country,\n        core.fn.SIMPLE_NETWORK_NAMES(cost.source) AS simplenetworknames,\n        core.fn.clean_campaign(cost.adn_campaign_name) AS campaign_name,\n        CASE\n            WHEN simplenetworknames = 'Adjoe' THEN campaign_name\n            WHEN cost.adn_sub_campaign_name IS null THEN 'missing'\n            ELSE cost.adn_sub_campaign_name\n        END AS sub_campaign_name,\n        core.fn.clean_creative(cost.adn_creative_name) AS creative_name,\n        COALESCE(cost.adn_campaign_id, 'missing') AS campaign_id,\n        COALESCE(cost.adn_sub_campaign_id, 'missing') AS sub_campaign_id,\n        COALESCE(core.fn.clean_creative_id(cost.adn_creative_id), 'missing') AS creative_id,\n        SUM(cost.adn_cost) AS cost,\n        SUM(cost.adn_clicks) AS clicks,\n        SUM(cost.adn_impressions) AS impressions\n    FROM singular.costs AS cost\n    INNER JOIN core.main.apps AS apps\n        ON cost.app = apps.app\n    LEFT JOIN core.main.vat AS vat\n        ON cost.country_field = vat.alpha_3_code\n    WHERE platform IS NOT null\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n)\n\nSELECT\n    *,\n    HASH(app, platform, simplenetworknames, campaign_name, sub_campaign_name, creative_name) AS campaign_creative_id,\n    HASH(campaign_creative_id, country) AS cohort_id\nFROM t1\nWHERE NOT (impressions IS null AND clicks IS null AND cost IS null)"}}

20:23:17,223 root INFO got get-tables command
20:23:17,225 root INFO -- returning json: {"tables": ["singular.costs", "core.main.apps", "core.main.vat"]}
20:23:17,225 root INFO running loop
20:23:17,226 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    events.platform,\n    events.adjusted_timestamp,\n    events.attribution_event_timestamp,\n    apps.app,\n    events.partner,\n    events.is_reengagement,\n    events.name,\n    events.converted_revenue,\n    events.is_revenue_valid,\n    events.arguments,\n    events.etl_record_processing_hour_utc,\n    CASE\n        WHEN events.platform = 'ios' THEN events.idfv\n        WHEN events.platform = 'android' THEN events.device_id\n    END AS device_id,\n    core.fn.clean_country(events.country) AS country,\n    core.fn.clean_country(events.event_country) AS event_country,\n    core.fn.SIMPLE_NETWORK_NAMES(events.partner) AS simplenetworknames,\n    core.fn.clean_campaign(events.campaign_name) AS campaign_name,\n    COALESCE(events.sub_campaign_name, 'missing') AS sub_campaign_name,\n    core.fn.clean_creative(events.creative_name) AS creative_name,\n    COALESCE(events.campaign_id, 'missing') AS campaign_id,\n    COALESCE(events.sub_campaign_id, 'missing') AS sub_campaign_id,\n    COALESCE(core.fn.clean_creative_id(events.creative_id), 'missing') AS creative_id\nFROM singular.events AS events\nINNER JOIN core.main.apps AS apps\n    ON events.app_longname = apps.bundle_id\nWHERE events.name IN (\n        '__iap__',\n        '__ADMON_USER_LEVEL_REVENUE__',\n        'lm_unlocked_city_30',\n        'lm_50_ads_watched',\n        'lm_unlocked_city_100',\n        'lm_unlocked_city_60',\n        'lm_60_ads_watched',\n        'lm_unlocked_city_2',\n        'lm_40_ads_watched',\n        'lm_unlocked_city_15',\n        'lm_unlocked_city_5',\n         '__SESSION__'\n    )\n    AND events.platform IN ('ios', 'android') AND events.converted_revenue \u003e= 0"}}

20:23:17,226 root INFO got get-tables command
20:23:17,228 root INFO -- returning json: {"tables": ["singular.events", "core.main.apps"]}
20:23:17,228 root INFO running loop
20:23:17,228 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    date,\n    app,\n    os,\n    country_field,\n    source,\n    adn_campaign_name,\n    adn_sub_campaign_name,\n    adn_creative_name,\n    adn_campaign_id,\n    adn_sub_campaign_id,\n    adn_creative_id,\n    asset_name,\n    adn_cost,\n    adn_clicks,\n    adn_installs,\n    adn_impressions,\n    etl_query_timestamp_utc\nFROM singular_database.aggregate.campaigns_creatives"}}

20:23:17,228 root INFO got get-tables command
20:23:17,228 root INFO -- returning json: {"tables": ["singular_database.aggregate.campaigns_creatives"]}
20:23:17,228 root INFO running loop
20:23:17,228 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH aggregates AS (\n    SELECT\n        conversion_date,\n        app,\n        platform,\n        country,\n        simplenetworknames,\n        campaign_id,\n        sub_campaign_id,\n        creative_id,\n        SUM(cost) AS cost,\n        SUM(clicks) AS clicks,\n        SUM(impressions) AS impressions\n    FROM singular.clean_cost\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8\n),\n\nname_ranks AS (\n    SELECT\n        campaign_id,\n        sub_campaign_id,\n        creative_id,\n        campaign_name,\n        sub_campaign_name,\n        creative_name,\n        ROW_NUMBER() OVER (PARTITION BY campaign_id, sub_campaign_id, creative_id ORDER BY conversion_date DESC) AS rn\n    FROM singular.clean_cost\n),\n\nrecent_names AS (\n    SELECT\n        campaign_id,\n        sub_campaign_id,\n        creative_id,\n        campaign_name,\n        sub_campaign_name,\n        creative_name\n    FROM name_ranks\n    WHERE rn = 1\n)\n\nSELECT\n    ak.conversion_date,\n    ak.app,\n    ak.platform,\n    ak.country,\n    ak.simplenetworknames,\n    rn.campaign_name,\n    rn.sub_campaign_name,\n    rn.creative_name,\n    ak.campaign_id,\n    ak.sub_campaign_id,\n    ak.creative_id,\n    ak.cost,\n    ak.clicks,\n    ak.impressions,\n    HASH(ak.app, ak.platform, ak.simplenetworknames, rn.campaign_name, rn.sub_campaign_name, rn.creative_name)\n        AS campaign_creative_id,\n    HASH(campaign_creative_id, ak.country) AS cohort_id\nFROM aggregates AS ak\nINNER JOIN\n    recent_names AS rn\n    ON ak.campaign_id = rn.campaign_id AND ak.sub_campaign_id = rn.sub_campaign_id AND ak.creative_id = rn.creative_id"}}

20:23:17,228 root INFO got get-tables command
20:23:17,231 root INFO -- returning json: {"tables": ["singular.clean_cost"]}
20:23:17,231 root INFO running loop
20:23:17,232 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    date,\n    app,\n    os,\n    country_field,\n    source,\n    unified_campaign_name,\n    sub_campaign_name,\n    creative_name,\n    custom_impressions,\n    custom_clicks,\n    custom_installs,\n    adn_cost,\n    probabilistic_cost,\n    revenue_1d,\n    revenue_2d,\n    revenue_3d,\n    revenue_7d,\n    revenue_14d,\n    revenue_30d,\n    revenue_60d,\n    revenue_90d,\n    revenue_actual,\n    ad_revenue_1d,\n    ad_revenue_2d,\n    ad_revenue_3d,\n    ad_revenue_7d,\n    ad_revenue_14d,\n    ad_revenue_30d,\n    ad_revenue_60d,\n    ad_revenue_90d,\n    ad_revenue_actual,\n    retained_users_1d,\n    retained_users_2d,\n    retained_users_3d,\n    retained_users_7d,\n    retained_users_14d,\n    retained_users_30d,\n    retained_users_60d,\n    retained_users_90d,\n    retained_users_actual,\n    etl_query_timestamp_utc\nFROM singular_database.aggregate.custom_creatives_v4"}}

20:23:17,232 root INFO got get-tables command
20:23:17,232 root INFO -- returning json: {"tables": ["singular_database.aggregate.custom_creatives_v4"]}
20:23:17,232 root INFO running loop
20:23:17,233 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    etl_record_processing_hour_utc,\n    device_id,\n    idfv,\n    platform,\n    attribution_event_timestamp,\n    adjusted_timestamp,\n    app_longname,\n    country,\n    partner,\n    campaign_name,\n    sub_campaign_name,\n    creative_name,\n    campaign_id,\n    sub_campaign_id,\n    creative_id,\n    name,\n    converted_revenue,\n    is_reengagement,\n    is_revenue_valid,\n    event_country,\n    arguments\nFROM singular_database.user.skan"}}

20:23:17,233 root INFO got get-tables command
20:23:17,233 root INFO -- returning json: {"tables": ["singular_database.user.skan"]}
20:23:17,233 root INFO running loop
20:23:17,235 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nSELECT\n    ua.conversion_date,\n    cid.app,\n    cid.platform,\n    cid.simplenetworknames,\n    cohort_id.country,\n    vat.alpha_3_code AS country_field,\n    cid.campaign_name,\n    cid.sub_campaign_name,\n    cid.creative_name,\n    cohort_id,\n    campaign_creative_id,\n    concepts.id AS concept_id,\n    concepts.var AS var_id,\n    concepts.ttcc_id,\n    concepts.production_date,\n    concepts.produced_by,\n    concepts.status,\n    concepts.test_platform,\n    concepts.test_winner,\n    concepts.resized,\n    concepts.idea,\n    concepts.test_winner2,\n    concepts.week_num,\n    concepts.upload,\n    COALESCE(vat.tier, 4) AS tier,\n    \n        SUM(COALESCE(ua.ADREV_1D, 0)) AS ADREV_1D,\n        SUM(COALESCE(ua.IAPREV_1D, 0)) AS IAPREV_1D,\n        SUM(COALESCE(ua.IAPREV_1D_NET, 0)) AS IAPREV_1D_NET,\n        SUM(COALESCE(ua.ADREV_1D, 0) + COALESCE(ua.IAPREV_1D, 0)) AS TOTALREV_1D,\n        SUM(COALESCE(ua.ADREV_1D, 0) + COALESCE(ua.IAPREV_1D_NET, 0)) AS TOTALREV_1D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_1D, 0)) AS RETAINED_USERS_1D,\n    \n        SUM(COALESCE(ua.ADREV_2D, 0)) AS ADREV_2D,\n        SUM(COALESCE(ua.IAPREV_2D, 0)) AS IAPREV_2D,\n        SUM(COALESCE(ua.IAPREV_2D_NET, 0)) AS IAPREV_2D_NET,\n        SUM(COALESCE(ua.ADREV_2D, 0) + COALESCE(ua.IAPREV_2D, 0)) AS TOTALREV_2D,\n        SUM(COALESCE(ua.ADREV_2D, 0) + COALESCE(ua.IAPREV_2D_NET, 0)) AS TOTALREV_2D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_2D, 0)) AS RETAINED_USERS_2D,\n    \n        SUM(COALESCE(ua.ADREV_3D, 0)) AS ADREV_3D,\n        SUM(COALESCE(ua.IAPREV_3D, 0)) AS IAPREV_3D,\n        SUM(COALESCE(ua.IAPREV_3D_NET, 0)) AS IAPREV_3D_NET,\n        SUM(COALESCE(ua.ADREV_3D, 0) + COALESCE(ua.IAPREV_3D, 0)) AS TOTALREV_3D,\n        SUM(COALESCE(ua.ADREV_3D, 0) + COALESCE(ua.IAPREV_3D_NET, 0)) AS TOTALREV_3D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_3D, 0)) AS RETAINED_USERS_3D,\n    \n        SUM(COALESCE(ua.ADREV_7D, 0)) AS ADREV_7D,\n        SUM(COALESCE(ua.IAPREV_7D, 0)) AS IAPREV_7D,\n        SUM(COALESCE(ua.IAPREV_7D_NET, 0)) AS IAPREV_7D_NET,\n        SUM(COALESCE(ua.ADREV_7D, 0) + COALESCE(ua.IAPREV_7D, 0)) AS TOTALREV_7D,\n        SUM(COALESCE(ua.ADREV_7D, 0) + COALESCE(ua.IAPREV_7D_NET, 0)) AS TOTALREV_7D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_7D, 0)) AS RETAINED_USERS_7D,\n    \n        SUM(COALESCE(ua.ADREV_14D, 0)) AS ADREV_14D,\n        SUM(COALESCE(ua.IAPREV_14D, 0)) AS IAPREV_14D,\n        SUM(COALESCE(ua.IAPREV_14D_NET, 0)) AS IAPREV_14D_NET,\n        SUM(COALESCE(ua.ADREV_14D, 0) + COALESCE(ua.IAPREV_14D, 0)) AS TOTALREV_14D,\n        SUM(COALESCE(ua.ADREV_14D, 0) + COALESCE(ua.IAPREV_14D_NET, 0)) AS TOTALREV_14D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_14D, 0)) AS RETAINED_USERS_14D,\n    \n        SUM(COALESCE(ua.ADREV_30D, 0)) AS ADREV_30D,\n        SUM(COALESCE(ua.IAPREV_30D, 0)) AS IAPREV_30D,\n        SUM(COALESCE(ua.IAPREV_30D_NET, 0)) AS IAPREV_30D_NET,\n        SUM(COALESCE(ua.ADREV_30D, 0) + COALESCE(ua.IAPREV_30D, 0)) AS TOTALREV_30D,\n        SUM(COALESCE(ua.ADREV_30D, 0) + COALESCE(ua.IAPREV_30D_NET, 0)) AS TOTALREV_30D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_30D, 0)) AS RETAINED_USERS_30D,\n    \n        SUM(COALESCE(ua.ADREV_60D, 0)) AS ADREV_60D,\n        SUM(COALESCE(ua.IAPREV_60D, 0)) AS IAPREV_60D,\n        SUM(COALESCE(ua.IAPREV_60D_NET, 0)) AS IAPREV_60D_NET,\n        SUM(COALESCE(ua.ADREV_60D, 0) + COALESCE(ua.IAPREV_60D, 0)) AS TOTALREV_60D,\n        SUM(COALESCE(ua.ADREV_60D, 0) + COALESCE(ua.IAPREV_60D_NET, 0)) AS TOTALREV_60D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_60D, 0)) AS RETAINED_USERS_60D,\n    \n        SUM(COALESCE(ua.ADREV_90D, 0)) AS ADREV_90D,\n        SUM(COALESCE(ua.IAPREV_90D, 0)) AS IAPREV_90D,\n        SUM(COALESCE(ua.IAPREV_90D_NET, 0)) AS IAPREV_90D_NET,\n        SUM(COALESCE(ua.ADREV_90D, 0) + COALESCE(ua.IAPREV_90D, 0)) AS TOTALREV_90D,\n        SUM(COALESCE(ua.ADREV_90D, 0) + COALESCE(ua.IAPREV_90D_NET, 0)) AS TOTALREV_90D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_90D, 0)) AS RETAINED_USERS_90D,\n    \n        SUM(COALESCE(ua.ADREV_180D, 0)) AS ADREV_180D,\n        SUM(COALESCE(ua.IAPREV_180D, 0)) AS IAPREV_180D,\n        SUM(COALESCE(ua.IAPREV_180D_NET, 0)) AS IAPREV_180D_NET,\n        SUM(COALESCE(ua.ADREV_180D, 0) + COALESCE(ua.IAPREV_180D, 0)) AS TOTALREV_180D,\n        SUM(COALESCE(ua.ADREV_180D, 0) + COALESCE(ua.IAPREV_180D_NET, 0)) AS TOTALREV_180D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_180D, 0)) AS RETAINED_USERS_180D,\n    \n        SUM(COALESCE(ua.ADREV_360D, 0)) AS ADREV_360D,\n        SUM(COALESCE(ua.IAPREV_360D, 0)) AS IAPREV_360D,\n        SUM(COALESCE(ua.IAPREV_360D_NET, 0)) AS IAPREV_360D_NET,\n        SUM(COALESCE(ua.ADREV_360D, 0) + COALESCE(ua.IAPREV_360D, 0)) AS TOTALREV_360D,\n        SUM(COALESCE(ua.ADREV_360D, 0) + COALESCE(ua.IAPREV_360D_NET, 0)) AS TOTALREV_360D_NET,\n        SUM(COALESCE(ua.RETAINED_USERS_360D, 0)) AS RETAINED_USERS_360D,\n    \n    SUM(COALESCE(ua.adrev_actual, 0)) AS adrev_actual,\n    SUM(COALESCE(ua.iaprev_actual, 0)) AS iaprev_actual,\n    SUM(COALESCE(ua.iaprev_actual_net, 0)) AS iaprev_actual_net,\n    SUM(COALESCE(ua.adrev_actual, 0) + COALESCE(iaprev_actual, 0)) AS totalrev_actual,\n    SUM(COALESCE(ua.adrev_actual, 0) + COALESCE(iaprev_actual_net, 0)) AS totalrev_actual_net,\n    SUM(COALESCE(ua.profit_actual, 0)) AS profit_actual,\n    SUM(COALESCE(ua.dau, 0)) AS dau,\n    SUM(COALESCE(ua.impressions, 0)) AS impressions,\n    SUM(COALESCE(ua.clicks, 0)) AS clicks,\n    SUM(COALESCE(ua.installs, 0)) AS installs,\n    SUM(COALESCE(ua.cost, 0)) AS cost,\n    SUM(COALESCE(ua.probabilistic_cost, 0)) AS probabilistic_cost,\n    '2024-07-16T23:59:59.999999Z' AS last_updated\nFROM ua.ua_data AS ua\nINNER JOIN cohorts.cohort_id AS cohort_id USING (cohort_id)\nINNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\nLEFT JOIN core.main.vat AS vat ON cohort_id.country = vat.alpha_2_code\nLEFT JOIN cohorts.creative_concepts AS concepts USING (campaign_creative_id)\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25;"}}

20:23:17,235 root INFO got get-tables command
20:23:17,245 root INFO -- returning json: {"tables": ["ua.ua_data", "cohorts.cohort_id", "core.main.vat", "cohorts.creative_id", "cohorts.creative_concepts"]}
20:23:17,245 root INFO running loop
20:23:17,247 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nWITH userlevel_aggregates AS (\n    SELECT\n        userlevel.conversion_date,\n        cohort_id,\n        \n            ADREV_1D,\n            IAPREV_1D,\n            IAPREV_1D_NET,\n            RETAINED_USERS_1D,\n        \n            ADREV_2D,\n            IAPREV_2D,\n            IAPREV_2D_NET,\n            RETAINED_USERS_2D,\n        \n            ADREV_3D,\n            IAPREV_3D,\n            IAPREV_3D_NET,\n            RETAINED_USERS_3D,\n        \n            ADREV_7D,\n            IAPREV_7D,\n            IAPREV_7D_NET,\n            RETAINED_USERS_7D,\n        \n            ADREV_14D,\n            IAPREV_14D,\n            IAPREV_14D_NET,\n            RETAINED_USERS_14D,\n        \n            ADREV_30D,\n            IAPREV_30D,\n            IAPREV_30D_NET,\n            RETAINED_USERS_30D,\n        \n            ADREV_60D,\n            IAPREV_60D,\n            IAPREV_60D_NET,\n            RETAINED_USERS_60D,\n        \n            ADREV_90D,\n            IAPREV_90D,\n            IAPREV_90D_NET,\n            RETAINED_USERS_90D,\n        \n            ADREV_180D,\n            IAPREV_180D,\n            IAPREV_180D_NET,\n            RETAINED_USERS_180D,\n        \n            ADREV_360D,\n            IAPREV_360D,\n            IAPREV_360D_NET,\n            RETAINED_USERS_360D,\n        \n        userlevel.adrev_actual,\n        userlevel.iaprev_actual,\n        userlevel.iaprev_actual_net,\n        userlevel.profit_actual,\n        userlevel.dau,\n        userlevel.impressions,\n        userlevel.clicks,\n        userlevel.installs,\n        userlevel.cost,\n        userlevel.probabilistic_cost\n    FROM ua.ua_metrics_userlevel_data AS userlevel\n    INNER JOIN cohorts.cohort_id USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    WHERE cid.simplenetworknames NOT IN ('Facebook', 'Tiktok')\n)\n\nSELECT\n    conversion_date,\n    cohort_id,\n    \n        ADREV_1D,\n        IAPREV_1D,\n        IAPREV_1D_NET,\n        RETAINED_USERS_1D,\n    \n        ADREV_2D,\n        IAPREV_2D,\n        IAPREV_2D_NET,\n        RETAINED_USERS_2D,\n    \n        ADREV_3D,\n        IAPREV_3D,\n        IAPREV_3D_NET,\n        RETAINED_USERS_3D,\n    \n        ADREV_7D,\n        IAPREV_7D,\n        IAPREV_7D_NET,\n        RETAINED_USERS_7D,\n    \n        ADREV_14D,\n        IAPREV_14D,\n        IAPREV_14D_NET,\n        RETAINED_USERS_14D,\n    \n        ADREV_30D,\n        IAPREV_30D,\n        IAPREV_30D_NET,\n        RETAINED_USERS_30D,\n    \n        ADREV_60D,\n        IAPREV_60D,\n        IAPREV_60D_NET,\n        RETAINED_USERS_60D,\n    \n        ADREV_90D,\n        IAPREV_90D,\n        IAPREV_90D_NET,\n        RETAINED_USERS_90D,\n    \n        ADREV_180D,\n        IAPREV_180D,\n        IAPREV_180D_NET,\n        RETAINED_USERS_180D,\n    \n        ADREV_360D,\n        IAPREV_360D,\n        IAPREV_360D_NET,\n        RETAINED_USERS_360D,\n    \n    adrev_actual,\n    iaprev_actual,\n    iaprev_actual_net,\n    profit_actual,\n    dau,\n    impressions,\n    clicks,\n    installs,\n    cost,\n    probabilistic_cost\nFROM userlevel_aggregates\nUNION\nSELECT\n    conversion_date,\n    cohort_id,\n    \n        ADREV_1D,\n        IAPREV_1D,\n        IAPREV_1D_NET,\n        RETAINED_USERS_1D,\n    \n        ADREV_2D,\n        IAPREV_2D,\n        IAPREV_2D_NET,\n        RETAINED_USERS_2D,\n    \n        ADREV_3D,\n        IAPREV_3D,\n        IAPREV_3D_NET,\n        RETAINED_USERS_3D,\n    \n        ADREV_7D,\n        IAPREV_7D,\n        IAPREV_7D_NET,\n        RETAINED_USERS_7D,\n    \n        ADREV_14D,\n        IAPREV_14D,\n        IAPREV_14D_NET,\n        RETAINED_USERS_14D,\n    \n        ADREV_30D,\n        IAPREV_30D,\n        IAPREV_30D_NET,\n        RETAINED_USERS_30D,\n    \n        ADREV_60D,\n        IAPREV_60D,\n        IAPREV_60D_NET,\n        RETAINED_USERS_60D,\n    \n        ADREV_90D,\n        IAPREV_90D,\n        IAPREV_90D_NET,\n        RETAINED_USERS_90D,\n    \n        ADREV_180D,\n        IAPREV_180D,\n        IAPREV_180D_NET,\n        RETAINED_USERS_180D,\n    \n        ADREV_360D,\n        IAPREV_360D,\n        IAPREV_360D_NET,\n        RETAINED_USERS_360D,\n    \n    adrev_actual,\n    iaprev_actual,\n    iaprev_actual_net,\n    profit_actual,\n    dau,\n    impressions,\n    clicks,\n    installs,\n    cost,\n    probabilistic_cost\nFROM ua.ua_metrics_aggregate_data"}}

20:23:17,247 root INFO got get-tables command
20:23:17,250 root INFO -- returning json: {"tables": ["ua.ua_metrics_userlevel_data", "ua.ua_metrics_aggregate_data", "cohorts.cohort_id", "cohorts.creative_id"]}
20:23:17,250 root INFO running loop
20:23:17,274 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\n\nWITH fees AS (\n    SELECT\n        clean.conversion_date,\n        cohort_id,\n        \n            ADREV_1D,\n            IAPREV_1D,\n            core.fn.calculate_vat(v.vat, IAPREV_1D) AS VAT_1D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_1D\n                        - VAT_1D\n                        - core.fn.calculate_iap_fee(VAT_1D, IAPREV_1D, 0.15)\n                ELSE IAPREV_1D\n                    - VAT_1D\n                    - core.fn.calculate_iap_fee(VAT_1D, IAPREV_1D, 0.30)\n            END AS IAPREV_1D_NET,\n            RETAINED_USERS_1D,\n        \n            ADREV_2D,\n            IAPREV_2D,\n            core.fn.calculate_vat(v.vat, IAPREV_2D) AS VAT_2D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_2D\n                        - VAT_2D\n                        - core.fn.calculate_iap_fee(VAT_2D, IAPREV_2D, 0.15)\n                ELSE IAPREV_2D\n                    - VAT_2D\n                    - core.fn.calculate_iap_fee(VAT_2D, IAPREV_2D, 0.30)\n            END AS IAPREV_2D_NET,\n            RETAINED_USERS_2D,\n        \n            ADREV_3D,\n            IAPREV_3D,\n            core.fn.calculate_vat(v.vat, IAPREV_3D) AS VAT_3D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_3D\n                        - VAT_3D\n                        - core.fn.calculate_iap_fee(VAT_3D, IAPREV_3D, 0.15)\n                ELSE IAPREV_3D\n                    - VAT_3D\n                    - core.fn.calculate_iap_fee(VAT_3D, IAPREV_3D, 0.30)\n            END AS IAPREV_3D_NET,\n            RETAINED_USERS_3D,\n        \n            ADREV_7D,\n            IAPREV_7D,\n            core.fn.calculate_vat(v.vat, IAPREV_7D) AS VAT_7D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_7D\n                        - VAT_7D\n                        - core.fn.calculate_iap_fee(VAT_7D, IAPREV_7D, 0.15)\n                ELSE IAPREV_7D\n                    - VAT_7D\n                    - core.fn.calculate_iap_fee(VAT_7D, IAPREV_7D, 0.30)\n            END AS IAPREV_7D_NET,\n            RETAINED_USERS_7D,\n        \n            ADREV_14D,\n            IAPREV_14D,\n            core.fn.calculate_vat(v.vat, IAPREV_14D) AS VAT_14D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_14D\n                        - VAT_14D\n                        - core.fn.calculate_iap_fee(VAT_14D, IAPREV_14D, 0.15)\n                ELSE IAPREV_14D\n                    - VAT_14D\n                    - core.fn.calculate_iap_fee(VAT_14D, IAPREV_14D, 0.30)\n            END AS IAPREV_14D_NET,\n            RETAINED_USERS_14D,\n        \n            ADREV_30D,\n            IAPREV_30D,\n            core.fn.calculate_vat(v.vat, IAPREV_30D) AS VAT_30D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_30D\n                        - VAT_30D\n                        - core.fn.calculate_iap_fee(VAT_30D, IAPREV_30D, 0.15)\n                ELSE IAPREV_30D\n                    - VAT_30D\n                    - core.fn.calculate_iap_fee(VAT_30D, IAPREV_30D, 0.30)\n            END AS IAPREV_30D_NET,\n            RETAINED_USERS_30D,\n        \n            ADREV_60D,\n            IAPREV_60D,\n            core.fn.calculate_vat(v.vat, IAPREV_60D) AS VAT_60D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_60D\n                        - VAT_60D\n                        - core.fn.calculate_iap_fee(VAT_60D, IAPREV_60D, 0.15)\n                ELSE IAPREV_60D\n                    - VAT_60D\n                    - core.fn.calculate_iap_fee(VAT_60D, IAPREV_60D, 0.30)\n            END AS IAPREV_60D_NET,\n            RETAINED_USERS_60D,\n        \n            ADREV_90D,\n            IAPREV_90D,\n            core.fn.calculate_vat(v.vat, IAPREV_90D) AS VAT_90D,\n            CASE\n                WHEN\n                    clean.conversion_date \u003c t.threshold_date\n                    THEN IAPREV_90D\n                        - VAT_90D\n                        - core.fn.calculate_iap_fee(VAT_90D, IAPREV_90D, 0.15)\n                ELSE IAPREV_90D\n                    - VAT_90D\n                    - core.fn.calculate_iap_fee(VAT_90D, IAPREV_90D, 0.30)\n            END AS IAPREV_90D_NET,\n            RETAINED_USERS_90D,\n        \n        clean.impressions,\n        clean.clicks,\n        clean.installs,\n        clean.cost,\n        clean.probabilistic_cost\n    FROM singular.clean_cc AS clean\n    LEFT JOIN core.main.vat AS v ON clean.country = v.alpha_2_code\n    LEFT JOIN user.android_fee_threshold AS t ON YEAR(clean.conversion_date) = t.year\n    INNER JOIN cohorts.cohort_id USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid ON clean.campaign_creative_id = cid.campaign_creative_id\n    WHERE clean.simplenetworknames IN ('Facebook', 'Tiktok')\n),\n\nuserlevel_enrichement_data AS (\n    SELECT\n        userlevel.conversion_date,\n        cohort_id,\n        \n            ADREV_180D,\n            IAPREV_180D,\n            IAPREV_180D_NET,\n            RETAINED_USERS_180D,\n        \n            ADREV_360D,\n            IAPREV_360D,\n            IAPREV_360D_NET,\n            RETAINED_USERS_360D,\n        \n        userlevel.adrev_actual,\n        userlevel.iaprev_actual,\n        userlevel.iaprev_actual_net,\n        userlevel.profit_actual,\n        userlevel.dau,\n        userlevel.impressions,\n        userlevel.clicks,\n        userlevel.cost,\n        userlevel.probabilistic_cost\n    FROM ua.ua_metrics_userlevel_data AS userlevel\n    INNER JOIN cohorts.cohort_id USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    WHERE cid.simplenetworknames IN ('Facebook', 'Tiktok')\n),\n\nenriched_aggregate_data AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        \n            agg.ADREV_1D,\n            agg.IAPREV_1D,\n            agg.IAPREV_1D_NET,\n            agg.RETAINED_USERS_1D,\n        \n            agg.ADREV_2D,\n            agg.IAPREV_2D,\n            agg.IAPREV_2D_NET,\n            agg.RETAINED_USERS_2D,\n        \n            agg.ADREV_3D,\n            agg.IAPREV_3D,\n            agg.IAPREV_3D_NET,\n            agg.RETAINED_USERS_3D,\n        \n            agg.ADREV_7D,\n            agg.IAPREV_7D,\n            agg.IAPREV_7D_NET,\n            agg.RETAINED_USERS_7D,\n        \n            agg.ADREV_14D,\n            agg.IAPREV_14D,\n            agg.IAPREV_14D_NET,\n            agg.RETAINED_USERS_14D,\n        \n            agg.ADREV_30D,\n            agg.IAPREV_30D,\n            agg.IAPREV_30D_NET,\n            agg.RETAINED_USERS_30D,\n        \n            agg.ADREV_60D,\n            agg.IAPREV_60D,\n            agg.IAPREV_60D_NET,\n            agg.RETAINED_USERS_60D,\n        \n            agg.ADREV_90D,\n            agg.IAPREV_90D,\n            agg.IAPREV_90D_NET,\n            agg.RETAINED_USERS_90D,\n        \n        \n            u.ADREV_180D,\n            u.IAPREV_180D,\n            u.IAPREV_180D_NET,\n            u.RETAINED_USERS_180D,\n        \n            u.ADREV_360D,\n            u.IAPREV_360D,\n            u.IAPREV_360D_NET,\n            u.RETAINED_USERS_360D,\n        \n        u.adrev_actual,\n        u.iaprev_actual,\n        u.iaprev_actual_net,\n        u.profit_actual,\n        u.dau,\n        u.impressions,\n        u.clicks,\n        agg.installs,\n        u.cost,\n        u.probabilistic_cost\n    FROM fees AS agg\n    FULL JOIN userlevel_enrichement_data AS u USING (conversion_date, cohort_id)\n)\n\nSELECT\n    conversion_date,\n    cohort_id,\n    \n        ADREV_1D,\n        IAPREV_1D,\n        IAPREV_1D_NET,\n        RETAINED_USERS_1D,\n    \n        ADREV_2D,\n        IAPREV_2D,\n        IAPREV_2D_NET,\n        RETAINED_USERS_2D,\n    \n        ADREV_3D,\n        IAPREV_3D,\n        IAPREV_3D_NET,\n        RETAINED_USERS_3D,\n    \n        ADREV_7D,\n        IAPREV_7D,\n        IAPREV_7D_NET,\n        RETAINED_USERS_7D,\n    \n        ADREV_14D,\n        IAPREV_14D,\n        IAPREV_14D_NET,\n        RETAINED_USERS_14D,\n    \n        ADREV_30D,\n        IAPREV_30D,\n        IAPREV_30D_NET,\n        RETAINED_USERS_30D,\n    \n        ADREV_60D,\n        IAPREV_60D,\n        IAPREV_60D_NET,\n        RETAINED_USERS_60D,\n    \n        ADREV_90D,\n        IAPREV_90D,\n        IAPREV_90D_NET,\n        RETAINED_USERS_90D,\n    \n        ADREV_180D,\n        IAPREV_180D,\n        IAPREV_180D_NET,\n        RETAINED_USERS_180D,\n    \n        ADREV_360D,\n        IAPREV_360D,\n        IAPREV_360D_NET,\n        RETAINED_USERS_360D,\n    \n    adrev_actual,\n    iaprev_actual,\n    iaprev_actual_net,\n    profit_actual,\n    dau,\n    impressions,\n    clicks,\n    installs,\n    cost,\n    probabilistic_cost\nFROM enriched_aggregate_data"}}

20:23:17,274 root INFO got get-tables command
20:23:17,283 root INFO -- returning json: {"tables": ["user.android_fee_threshold", "cohorts.cohort_id", "core.main.vat", "cohorts.creative_id", "ua.ua_metrics_userlevel_data", "singular.clean_cc"]}
20:23:17,283 root INFO running loop
20:23:17,286 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\nWITH actual_revenue AS (\n    SELECT\n        cohort_id,\n        revenue_date,\n        SUM(revenue_ad) AS adrev_actual,\n        SUM(revenue_iap) AS iaprev_actual,\n        SUM(COALESCE(revenue_iap, 0) - COALESCE(fee_iap, 0) - COALESCE(vat_amount, 0)) AS iaprev_actual_net\n    FROM cohorts.cohort_aggregates\n    GROUP BY 1, 2\n),\n\napplovin_prob_cost_tbl AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        SUM(probabilistic_cost) AS probabilistic_cost\n    FROM singular.clean_cc\n    WHERE simplenetworknames = 'Applovin'\n    GROUP BY 1, 2\n),\n\njoined_revenue AS (\n    SELECT\n        COALESCE(cmr.conversion_date, ar.revenue_date) AS conversion_date,\n        COALESCE(cmr.cohort_id, ar.cohort_id) AS cohort_id,\n        \n            cmr.adrev_1d,\n            cmr.iaprev_1d,\n            cmr.iaprev_1d_net,\n            cmr.retained_users_1d,\n        \n            cmr.adrev_2d,\n            cmr.iaprev_2d,\n            cmr.iaprev_2d_net,\n            cmr.retained_users_2d,\n        \n            cmr.adrev_3d,\n            cmr.iaprev_3d,\n            cmr.iaprev_3d_net,\n            cmr.retained_users_3d,\n        \n            cmr.adrev_7d,\n            cmr.iaprev_7d,\n            cmr.iaprev_7d_net,\n            cmr.retained_users_7d,\n        \n            cmr.adrev_14d,\n            cmr.iaprev_14d,\n            cmr.iaprev_14d_net,\n            cmr.retained_users_14d,\n        \n            cmr.adrev_30d,\n            cmr.iaprev_30d,\n            cmr.iaprev_30d_net,\n            cmr.retained_users_30d,\n        \n            cmr.adrev_60d,\n            cmr.iaprev_60d,\n            cmr.iaprev_60d_net,\n            cmr.retained_users_60d,\n        \n            cmr.adrev_90d,\n            cmr.iaprev_90d,\n            cmr.iaprev_90d_net,\n            cmr.retained_users_90d,\n        \n            cmr.adrev_180d,\n            cmr.iaprev_180d,\n            cmr.iaprev_180d_net,\n            cmr.retained_users_180d,\n        \n            cmr.adrev_360d,\n            cmr.iaprev_360d,\n            cmr.iaprev_360d_net,\n            cmr.retained_users_360d,\n        \n        ar.adrev_actual,\n        ar.iaprev_actual,\n        ar.iaprev_actual_net\n    FROM cohorts.cohort_metrics AS cmr\n    FULL OUTER JOIN actual_revenue AS ar ON cmr.cohort_id = ar.cohort_id AND cmr.conversion_date = ar.revenue_date\n),\n\ngroup_costs AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        SUM(cost) AS cost,\n        SUM(impressions) AS impressions,\n        SUM(clicks) AS clicks\n    FROM singular.costs_updated_names\n    GROUP BY 1, 2\n),\n\nrevenue_costs AS (\n    SELECT\n        conversion_date,\n        cohort_id,\n        \n            rev.adrev_1d,\n            rev.iaprev_1d,\n            rev.iaprev_1d_net,\n            rev.retained_users_1d,\n        \n            rev.adrev_2d,\n            rev.iaprev_2d,\n            rev.iaprev_2d_net,\n            rev.retained_users_2d,\n        \n            rev.adrev_3d,\n            rev.iaprev_3d,\n            rev.iaprev_3d_net,\n            rev.retained_users_3d,\n        \n            rev.adrev_7d,\n            rev.iaprev_7d,\n            rev.iaprev_7d_net,\n            rev.retained_users_7d,\n        \n            rev.adrev_14d,\n            rev.iaprev_14d,\n            rev.iaprev_14d_net,\n            rev.retained_users_14d,\n        \n            rev.adrev_30d,\n            rev.iaprev_30d,\n            rev.iaprev_30d_net,\n            rev.retained_users_30d,\n        \n            rev.adrev_60d,\n            rev.iaprev_60d,\n            rev.iaprev_60d_net,\n            rev.retained_users_60d,\n        \n            rev.adrev_90d,\n            rev.iaprev_90d,\n            rev.iaprev_90d_net,\n            rev.retained_users_90d,\n        \n            rev.adrev_180d,\n            rev.iaprev_180d,\n            rev.iaprev_180d_net,\n            rev.retained_users_180d,\n        \n            rev.adrev_360d,\n            rev.iaprev_360d,\n            rev.iaprev_360d_net,\n            rev.retained_users_360d,\n        \n        rev.adrev_actual,\n        rev.iaprev_actual,\n        rev.iaprev_actual_net,\n        costs.cost,\n        costs.impressions,\n        costs.clicks,\n        COALESCE(COALESCE(rev.iaprev_actual_net, 0) + COALESCE(rev.adrev_actual, 0), 0)\n        - COALESCE(costs.cost, 0) AS profit_actual\n    FROM joined_revenue AS rev\n    FULL JOIN group_costs AS costs USING (cohort_id, conversion_date)\n),\n\nua_userlevel_metrics AS (\n    SELECT\n        COALESCE(rc.conversion_date, installs.conversion_date, dau.revenue_date) AS conversion_date,\n        COALESCE(rc.cohort_id, installs.cohort_id, dau.cohort_id) AS cohort_id,\n        \n            rc.adrev_1d,\n            rc.iaprev_1d,\n            rc.iaprev_1d_net,\n            rc.retained_users_1d,\n        \n            rc.adrev_2d,\n            rc.iaprev_2d,\n            rc.iaprev_2d_net,\n            rc.retained_users_2d,\n        \n            rc.adrev_3d,\n            rc.iaprev_3d,\n            rc.iaprev_3d_net,\n            rc.retained_users_3d,\n        \n            rc.adrev_7d,\n            rc.iaprev_7d,\n            rc.iaprev_7d_net,\n            rc.retained_users_7d,\n        \n            rc.adrev_14d,\n            rc.iaprev_14d,\n            rc.iaprev_14d_net,\n            rc.retained_users_14d,\n        \n            rc.adrev_30d,\n            rc.iaprev_30d,\n            rc.iaprev_30d_net,\n            rc.retained_users_30d,\n        \n            rc.adrev_60d,\n            rc.iaprev_60d,\n            rc.iaprev_60d_net,\n            rc.retained_users_60d,\n        \n            rc.adrev_90d,\n            rc.iaprev_90d,\n            rc.iaprev_90d_net,\n            rc.retained_users_90d,\n        \n            rc.adrev_180d,\n            rc.iaprev_180d,\n            rc.iaprev_180d_net,\n            rc.retained_users_180d,\n        \n            rc.adrev_360d,\n            rc.iaprev_360d,\n            rc.iaprev_360d_net,\n            rc.retained_users_360d,\n        \n        rc.adrev_actual,\n        rc.iaprev_actual,\n        rc.iaprev_actual_net,\n        rc.profit_actual,\n        dau.active_users AS dau,\n        rc.impressions,\n        rc.clicks,\n        installs.installs,\n        rc.cost\n    FROM revenue_costs AS rc\n    FULL JOIN\n        cohorts.installs AS installs\n        ON rc.cohort_id = installs.cohort_id AND rc.conversion_date = installs.conversion_date\n    FULL JOIN cohorts.dau AS dau ON rc.cohort_id = dau.cohort_id AND rc.conversion_date = dau.revenue_date\n)\n\nSELECT\n    conversion_date,\n    cohort_id,\n    \n        userlevel.adrev_1d,\n        userlevel.iaprev_1d,\n        userlevel.iaprev_1d_net,\n        userlevel.retained_users_1d,\n    \n        userlevel.adrev_2d,\n        userlevel.iaprev_2d,\n        userlevel.iaprev_2d_net,\n        userlevel.retained_users_2d,\n    \n        userlevel.adrev_3d,\n        userlevel.iaprev_3d,\n        userlevel.iaprev_3d_net,\n        userlevel.retained_users_3d,\n    \n        userlevel.adrev_7d,\n        userlevel.iaprev_7d,\n        userlevel.iaprev_7d_net,\n        userlevel.retained_users_7d,\n    \n        userlevel.adrev_14d,\n        userlevel.iaprev_14d,\n        userlevel.iaprev_14d_net,\n        userlevel.retained_users_14d,\n    \n        userlevel.adrev_30d,\n        userlevel.iaprev_30d,\n        userlevel.iaprev_30d_net,\n        userlevel.retained_users_30d,\n    \n        userlevel.adrev_60d,\n        userlevel.iaprev_60d,\n        userlevel.iaprev_60d_net,\n        userlevel.retained_users_60d,\n    \n        userlevel.adrev_90d,\n        userlevel.iaprev_90d,\n        userlevel.iaprev_90d_net,\n        userlevel.retained_users_90d,\n    \n        userlevel.adrev_180d,\n        userlevel.iaprev_180d,\n        userlevel.iaprev_180d_net,\n        userlevel.retained_users_180d,\n    \n        userlevel.adrev_360d,\n        userlevel.iaprev_360d,\n        userlevel.iaprev_360d_net,\n        userlevel.retained_users_360d,\n    \n    userlevel.adrev_actual,\n    userlevel.iaprev_actual,\n    userlevel.iaprev_actual_net,\n    userlevel.profit_actual,\n    userlevel.dau,\n    userlevel.impressions,\n    userlevel.clicks,\n    userlevel.installs,\n    userlevel.cost,\n    prob_cost.probabilistic_cost\nFROM ua_userlevel_metrics AS userlevel\nFULL JOIN applovin_prob_cost_tbl AS prob_cost USING (cohort_id, conversion_date)"}}

20:23:17,286 root INFO got get-tables command
20:23:17,293 root INFO -- returning json: {"tables": ["cohorts.cohort_metrics", "cohorts.installs", "cohorts.dau", "singular.costs_updated_names", "cohorts.cohort_aggregates", "singular.clean_cc"]}
20:23:17,294 root INFO running loop
20:23:17,294 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH name_mapping AS (\n    SELECT DISTINCT\n        campaign_id,\n        sub_campaign_id,\n        creative_id,\n        campaign_name,\n        sub_campaign_name,\n        creative_name\n    FROM singular.costs_updated_names\n),\n\nmapped_names AS (\n    SELECT DISTINCT\n        attr.device_id,\n        attr.app,\n        attr.attribution_event_timestamp AS install_ts,\n        attr.platform,\n        attr.country,\n        attr.simplenetworknames,\n        attr.is_reengagement,\n        COALESCE(map.campaign_name, attr.campaign_name) AS campaign_name,\n        COALESCE(map.sub_campaign_name, attr.sub_campaign_name) AS sub_campaign_name,\n        COALESCE(map.creative_name, attr.creative_name) AS creative_name\n    FROM singular.clean_attributions AS attr\n    LEFT JOIN name_mapping AS map USING (campaign_id, sub_campaign_id, creative_id)\n    WHERE CONVERT_TIMEZONE('CET', install_ts)::DATE BETWEEN '2024-07-16'::DATE - 1 AND '2024-07-16'\n)\n\nSELECT DISTINCT\n    device_id,\n    app,\n    install_ts,\n    platform,\n    country,\n    simplenetworknames,\n    campaign_name,\n    sub_campaign_name,\n    creative_name,\n    is_reengagement,\n    HASH(device_id, app, install_ts) AS install_id,\n    HASH(app, platform, simplenetworknames, campaign_name, sub_campaign_name, creative_name) AS campaign_creative_id,\n    HASH(campaign_creative_id, country) AS cohort_id\nFROM mapped_names"}}

20:23:17,294 root INFO got get-tables command
20:23:17,295 root INFO -- returning json: {"tables": ["singular.clean_attributions", "singular.costs_updated_names"]}
20:23:17,295 root INFO running loop
20:23:17,296 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH\nrevenue_events AS (\n    SELECT\n        users.install_id,\n        users.platform,\n        CONVERT_TIMEZONE('CET', events.adjusted_timestamp)::DATE AS revenue_date,\n        events.name AS event_name,\n        events.converted_revenue,\n        COALESCE(events.country, users.country) AS country,\n        DATEDIFF('second', events.attribution_event_timestamp, events.adjusted_timestamp) AS user_age_seconds,\n        GREATEST(FLOOR((user_age_seconds / 86400)), 0) AS user_age_in_days\n    FROM singular.clean_events AS events\n    INNER JOIN\n        user.users AS users\n        ON events.device_id = users.device_id AND events.app = users.app\n            AND events.attribution_event_timestamp = users.install_ts\n    WHERE events.is_revenue_valid AND revenue_date BETWEEN '2024-07-16' AND '2024-07-16'\n),\n\n-- this will show every active user, even if he made no revenue that day\nrevenue AS (\n    SELECT\n        install_id,\n        country,\n        platform,\n        revenue_date,\n        user_age_in_days,\n        CASE WHEN (event_name = '__ADMON_USER_LEVEL_REVENUE__') THEN converted_revenue END AS converted_revenue_ad,\n        CASE WHEN (event_name = '__iap__') THEN converted_revenue END AS converted_revenue_iap\n    FROM revenue_events\n),\n\nfees AS (\n    SELECT\n        rev.install_id,\n        rev.revenue_date,\n        rev.user_age_in_days,\n        rev.converted_revenue_ad,\n        rev.converted_revenue_iap,\n        core.fn.CALCULATE_VAT(vat.vat, rev.converted_revenue_iap) AS converted_vat_amount,\n        CASE\n            WHEN rev.platform = 'android' AND rev.revenue_date \u003c fee_thres.threshold_date\n                THEN core.fn.CALCULATE_IAP_FEE(converted_vat_amount, rev.converted_revenue_iap, 0.15)\n            ELSE core.fn.CALCULATE_IAP_FEE(converted_vat_amount, rev.converted_revenue_iap, 0.3)\n        END AS converted_fee_iap\n    FROM revenue AS rev\n    LEFT JOIN core.main.vat AS vat ON rev.country = vat.alpha_2_code\n    LEFT JOIN user.android_fee_threshold AS fee_thres ON YEAR(rev.revenue_date) = fee_thres.year\n),\n\naggregated_revenue AS (\n    SELECT\n        install_id,\n        revenue_date,\n        user_age_in_days,\n        SUM(converted_revenue_ad) AS revenue_ad,\n        SUM(converted_revenue_iap) AS revenue_iap,\n        SUM(converted_fee_iap) AS fee_iap,\n        SUM(converted_vat_amount) AS vat_amount\n    FROM fees\n    GROUP BY 1, 2, 3\n),\n\nnumber_of_iaps AS (\n    SELECT\n        install_id,\n        revenue_date,\n        user_age_in_days,\n        COUNT(*) AS number_of_iaps\n    FROM revenue_events\n    WHERE event_name = '__iap__'\n    GROUP BY 1, 2, 3\n)\n\nSELECT\n    install_id,\n    revenue_date,\n    user_age_in_days,\n    agg_rev.revenue_ad,\n    agg_rev.revenue_iap,\n    agg_rev.fee_iap,\n    agg_rev.vat_amount,\n    num.number_of_iaps\nFROM aggregated_revenue AS agg_rev\nLEFT JOIN number_of_iaps AS num USING (install_id, revenue_date, user_age_in_days)\nWHERE revenue_date BETWEEN '2024-07-16' AND '2024-07-16';"}}

20:23:17,296 root INFO got get-tables command
20:23:17,299 root INFO -- returning json: {"tables": ["singular.clean_events", "user.users", "user.android_fee_threshold", "core.main.vat"]}
20:23:17,299 root INFO running loop
20:23:17,299 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"SELECT\n    device_id,\n    app,\n    install_ts,\n    platform,\n    country,\n    simplenetworknames,\n    campaign_name,\n    sub_campaign_name,\n    creative_name,\n    is_reengagement,\n    install_id,\n    campaign_creative_id,\n    cohort_id\nFROM user.attributed_users\nUNION\nSELECT\n    device_id,\n    app,\n    install_ts,\n    platform,\n    country,\n    simplenetworknames,\n    campaign_name,\n    sub_campaign_name,\n    creative_name,\n    null AS is_reengagement,\n    install_id,\n    campaign_creative_id,\n    cohort_id\nFROM user.old_users"}}

20:23:17,299 root INFO got get-tables command
20:23:17,300 root INFO -- returning json: {"tables": ["user.old_users", "user.attributed_users"]}
20:23:17,300 root INFO running loop
20:23:17,301 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH t1 AS (\n    SELECT\n        device_id,\n        platform,\n        CONVERT_TIMEZONE('CET', attribution_event_timestamp)::DATE\n            AS conversion_date,\n        name,\n        DATEDIFF('second', attribution_event_timestamp, adjusted_timestamp)\n            AS user_age_seconds,\n        GREATEST(FLOOR((user_age_seconds / 86400)), 0) AS user_age_in_days\n    FROM singular.clean_events\n    WHERE\n        conversion_date BETWEEN '2024-07-16'::DATE\n        - 30 AND '2024-07-16'\n        AND name IN (\n            'lm_unlocked_city_30',\n            'lm_50_ads_watched',\n            'lm_unlocked_city_100',\n            'lm_unlocked_city_60',\n            'lm_60_ads_watched',\n            'lm_unlocked_city_2',\n            'lm_40_ads_watched',\n            'lm_unlocked_city_15',\n            'lm_unlocked_city_5'\n        ) AND conversion_date \u003e '2024-02-13'\n),\n\ninstalls AS (\n    SELECT\n        installs.conversion_date,\n        cid.platform,\n        SUM(installs.installs) AS installs\n    FROM cohorts.installs AS installs\n    INNER JOIN cohorts.cohort_id ON installs.cohort_id = cohort_id.cohort_id\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    WHERE\n        installs.conversion_date BETWEEN '2024-07-16'::DATE\n        - 30 AND '2024-07-16'\n    GROUP BY 1, 2\n),\n\nevent_counts AS (\n    SELECT\n        platform,\n        conversion_date,\n        user_age_in_days,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_30' THEN device_id END\n        ) AS city_30,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_50_ads_watched' THEN device_id END\n        ) AS ads_50,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_100' THEN device_id END\n        ) AS city_100,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_60' THEN device_id END\n        ) AS city_60,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_60_ads_watched' THEN device_id END\n        ) AS ads_60,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_40_ads_watched' THEN device_id END\n        ) AS ads_40,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_15' THEN device_id END\n        ) AS city_15,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_5' THEN device_id END\n        ) AS city_5,\n        COUNT(\n            DISTINCT CASE WHEN name = 'lm_unlocked_city_2' THEN device_id END\n        ) AS city_2\n    FROM t1\n    GROUP BY 1, 2, 3\n),\n\nuser_numbers AS (\n    SELECT\n        conversion_date,\n        platform,\n        ecount.user_age_in_days,\n        installs.installs,\n        SUM(ecount.city_30)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_30,\n        SUM(ecount.ads_50)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS ads_50,\n        SUM(ecount.city_100)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_100,\n        SUM(ecount.city_60)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_60,\n        SUM(ecount.ads_60)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS ads_60,\n        SUM(ecount.ads_40)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS ads_40,\n        SUM(ecount.city_15)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_15,\n        SUM(ecount.city_5)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_5,\n        SUM(ecount.city_2)\n            OVER (PARTITION BY platform, conversion_date ORDER BY ecount.user_age_in_days)\n            AS city_2\n    FROM event_counts AS ecount\n    LEFT JOIN\n        installs USING (platform, conversion_date)\n)\n\nSELECT\n    platform,\n    conversion_date,\n    user_age_in_days,\n    ads_40 / installs AS ads_40_cvr,\n    ads_50 / installs AS ads_50_cvr,\n    ads_60 / installs AS ads_60_cvr,\n    city_2 / installs AS city_2_cvr,\n    city_15 / installs AS city_15_cvr,\n    city_5 / installs AS city_5_cvr,\n    city_30 / installs AS city_30_cvr,\n    city_60 / installs AS city_60_cvr,\n    city_100 / installs AS city_100_cvr\nFROM user_numbers\nORDER BY 1, 2, 3"}}

20:23:17,301 root INFO got get-tables command
20:23:17,306 root INFO -- returning json: {"tables": ["singular.clean_events", "cohorts.creative_id", "cohorts.installs", "cohorts.cohort_id"]}
20:23:17,306 root INFO running loop
20:23:17,308 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"WITH cohorts AS (\n    SELECT DISTINCT\n        agg.conversion_date,\n        cid.app,\n        cid.platform,\n        cid.simplenetworknames,\n        cohort.country,\n        cid.campaign_name\n    FROM cohorts.cohort_aggregates AS agg\n    INNER JOIN\n        cohorts.cohort_id AS cohort\n        USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    WHERE agg.conversion_date BETWEEN '2024-07-16' AND '2024-07-16'\n),\n\ncohort_installs AS (\n    SELECT\n        cid.app,\n        cid.platform,\n        cid.simplenetworknames,\n        cohort.country,\n        cid.campaign_name,\n        installs.conversion_date,\n        SUM(installs.installs) AS installs\n    FROM cohorts.installs AS installs\n    INNER JOIN cohorts.cohort_id AS cohort USING (cohort_id)\n    INNER JOIN cohorts.creative_id AS cid USING (campaign_creative_id)\n    WHERE\n        installs.conversion_date BETWEEN '2024-07-16' AND '2024-07-16'\n    GROUP BY 1, 2, 3, 4, 5, 6\n),\n\ncosts AS (\n    SELECT\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        conversion_date,\n        SUM(cost) AS cost\n    FROM singular.costs_updated_names\n    WHERE conversion_date BETWEEN '2024-07-16' AND '2024-07-16'\n    GROUP BY 1, 2, 3, 4, 5, 6\n),\n\ndate_diff AS (\n    SELECT\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        conversion_date,\n        DATEDIFF('day', conversion_date, CURRENT_DATE()) AS days_diff\n    FROM cohorts\n),\n\nrecursive_dates AS (\n    SELECT\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        conversion_date,\n        0 AS user_age_in_days,\n        days_diff\n    FROM date_diff\n    UNION ALL\n    SELECT\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        conversion_date,\n        user_age_in_days + 1 AS user_age_in_days,\n        days_diff\n    FROM recursive_dates\n    WHERE user_age_in_days + 1 \u003c= days_diff\n),\n\nrevenue AS (\n    SELECT\n        conversion_date,\n        rd.user_age_in_days,\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        conversion_date + rd.user_age_in_days AS r_date,\n        SUM(COALESCE(agg.revenue_ad, 0)) AS ad_rev,\n        SUM(\n            COALESCE(agg.revenue_iap, 0) - COALESCE(agg.fee_iap, 0) - COALESCE(agg.vat_amount, 0)\n        ) AS iap_rev\n    FROM cohorts.cohort_aggregates AS agg\n    INNER JOIN\n        cohorts.cohort_id USING (cohort_id)\n    INNER JOIN cohorts.creative_id USING (campaign_creative_id)\n    FULL JOIN\n        recursive_dates AS rd\n        USING\n            (\n                app,\n                platform,\n                simplenetworknames,\n                country,\n                conversion_date,\n                user_age_in_days,\n                campaign_name\n            )\n    WHERE\n        r_date BETWEEN '2024-07-16' AND '2024-07-16'\n    GROUP BY 1, 2, 3, 4, 5, 6, 7, 8\n),\n\n-- the having clause is used to filter out the cohorts that are not yet 30 days old\nrev AS (\n    SELECT\n        conversion_date,\n        app,\n        platform,\n        simplenetworknames,\n        country,\n        campaign_name,\n        SUM(IFF(user_age_in_days \u003c 30, ad_rev, 0)) AS adrev_30d,\n        SUM(IFF(user_age_in_days \u003c 30, iap_rev, 0)) AS iaprev_30d\n    FROM revenue\n    GROUP BY 1, 2, 3, 4, 5, 6\n    HAVING MAX(user_age_in_days) \u003e= 30\n)\n\nSELECT\n    conversion_date,\n    revenue.r_date AS revenue_date,\n    revenue.user_age_in_days,\n    app,\n    country,\n    platform,\n    simplenetworknames,\n    campaign_name,\n    revenue.ad_rev,\n    revenue.iap_rev,\n    installs.installs,\n    rev.adrev_30d,\n    rev.iaprev_30d,\n    costs.cost\nFROM revenue\nLEFT JOIN\n    rev USING (app, platform, simplenetworknames, country, conversion_date, campaign_name)\nLEFT JOIN\n    cohort_installs AS installs\n    USING\n        (app, platform, simplenetworknames, country, conversion_date, campaign_name)\nLEFT JOIN\n    costs\n    USING\n        (app, platform, simplenetworknames, country, conversion_date, campaign_name)"}}

20:23:17,308 root INFO got get-tables command
20:23:17,312 root INFO -- returning json: {"tables": ["cohorts.installs", "cohorts.cohort_id", "cohorts.creative_id", "recursive_dates", "singular.costs_updated_names", "cohorts.cohort_aggregates"]}
20:23:17,312 root INFO running loop
20:23:17,318 root INFO got out of the loop
20:23:40,619 root INFO ============================
20:23:40,619 root INFO starting the loop
20:23:40,619 root INFO running loop
20:23:40,619 root INFO -- loaded json: {"command":"init","contents":null}

20:23:40,619 root INFO got init command
20:23:40,619 root INFO -- returning json: {}
20:23:40,619 root INFO running loop
20:23:40,620 root INFO -- loaded json: {"command":"get-tables","contents":{"dialect":"snowflake","query":"\n\n\nWITH model AS MODEL FORECASTS_DEV.MODELS.D1_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n    current_timestamp() as entry_timestamp,\n    30 AS predicted_day,\n    1 as prediction_priority,\n    'D1_D30_ORGANICS' as model,\n    'V240709A' as version,\n    (model!predict(ADREV_1D , ADREV_1D_ROLLING , DAYS_SINCE_2022 , EATVENTURE_OHE , IAPREV_1D_NET , IAPREV_1D_NET_LAGGED_7D , IAPREV_1D_NET_ROLLING , INSTALLS , POCKETCHESS_OHE , RELATIVE_INSTALLS_PER_COUNTRY , TIER , WAW_OHE  ):PREDICTED_TOTALREV_30D_NET)::NUMBER(38,6) AS REVENUE_PREDICTION\nFROM features.features_organics\nWHERE conversion_date BETWEEN '2024-07-16'::DATE - 2 AND '2024-07-16'::DATE\nAND (iaprev_1d_net + adrev_1d) \u003e 0 \nAND ADREV_1D IS NOT NULL  AND  ADREV_1D_ROLLING IS NOT NULL  AND  DAYS_SINCE_2022 IS NOT NULL  AND  EATVENTURE_OHE IS NOT NULL  AND  IAPREV_1D_NET IS NOT NULL  AND  IAPREV_1D_NET_LAGGED_7D IS NOT NULL  AND  IAPREV_1D_NET_ROLLING IS NOT NULL  AND  INSTALLS IS NOT NULL  AND  POCKETCHESS_OHE IS NOT NULL  AND  RELATIVE_INSTALLS_PER_COUNTRY IS NOT NULL  AND  TIER IS NOT NULL  AND  WAW_OHE IS NOT NULL  "}}

20:23:40,620 root INFO got get-tables command
20:23:40,620 root INFO -- returning json: {"tables": [], "error": "Expecting (. Line 4, Col: 19.\n  \n\n\nWITH model AS \u001b[4mMODEL\u001b[0m FORECASTS_DEV.MODELS.D1_D30_ORGANICS VERSION V240709A\nSELECT\n    conversion_date,\n    campaign_id,\n"}
20:23:40,620 root INFO running loop
20:23:40,621 root INFO got out of the loop
